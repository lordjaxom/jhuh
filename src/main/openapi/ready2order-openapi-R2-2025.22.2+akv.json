{
  "openapi": "3.0.0",
  "info": {
    "title": "ready2order Public API",
    "description": "# Intro\n## Authentication\n* ready2order API uses token-based authentication.\n* all requests require an `Authorization` HTTP header with the appropriate token.\n* ensure the header is spelled correctly as `Authorization`.\n----\n# Getting Started\n\n## 1. Obtain a Developer Token\n- **Endpoint**: Register at [api.ready2order.com](https://api.ready2order.com).\n- **Details**: No `Authorization` header is needed at this stage since you donâ€™t yet have a token. Follow the signup instructions and provide the required request data.\n\n## 2. Request a Grant Access Token\n- **Endpoint**: `POST /v1/developerToken/grantAccessToken`\n- **Headers**:\n    - `Authorization: Bearer <Developer-Token>`\n- **Request Body**:\n    - `callbackUri` (optional): The URI to redirect to after approval or denial (e.g., `http://www.ready2order.com?your-extra-param=123`).\n- **Response**:\n    - `grantAccessToken`: The token for the next step.\n    - `grantAccessUri`: The full URI to approve access.\n- **Note**: Use the `grantAccessUri` in the next step.\n\n## 3. Obtain an Account Token\n- **Steps**:\n    1. Navigate to the `grantAccessUri` from the previous step.\n    2. Log in with existing ready2order account credentials.\n    3. Approve or deny access via the confirmation dialog.\n- **Redirect**: If a `callbackUri` was specified, the API redirects to it with these parameters:\n    - `accountToken`: The Account Token (if approved).\n    - `grantAccessToken`: The Grant Access Token used.\n    - `status`: `approved` or `denied`.\n- **Example Redirect**: `http://www.ready2order.com?your-extra-param=123&accountToken=<ACCOUNT_TOKEN>&grantAccessToken=<GRANT_ACCESS_TOKEN>&status=approved`\n- **Expiration**: The Grant Access Token expires after 10 minutes if not used.\n\n----\n# Token Types\n\n## Developer Token\n- **Purpose**: Identifies the developer using the API. Used to request permissions for existing ready2order accounts.\n- **How to Obtain**:\n  1. Visit [api.ready2order.com](https://api.ready2order.com).\n  2. Sign up as a developer.\n  3. Follow the instructions in the confirmation email, which includes your Developer Token.\n- **Usage**: Only required for requesting a Grant Access Token.\n\n## Grant Access Token\n- **Purpose**: Enables a developer to request permissions for ready2order accounts.\n- **Expiration**: Valid for 10 minutes. If not approved within this time, you must request a new one.\n\n## Account Token\n- **Purpose**: Grants access to account-specific data, such as products, product groups, customers, and more.\n- **Requirement**: Must be included in the `Authorization` header for all account data interactions.\n\n\n\n\n----\n# Rate limit\n- **Limit**: 60 requests per minute per Account Token.\n- **Exceeded Response Status**: HTTP 429\n\n----\n# Webhooks\n\n## Overview\nready2order supports webhooks to notify your application of events in real time, providing an optimal experience.\n\n## Available Events\n\n| Event                  | Description                                  |\n|-----------------------|----------------------------------------------|\n| `product.created`     | Triggered when a new product is created.     |\n| `product.updated`     | Triggered when an existing product is updated. |\n| `product.deleted`     | Triggered when an existing product is deleted. |\n| `productGroup.created`| Triggered when a new product group is created. |\n| `productGroup.updated`| Triggered when an existing product group is updated. |\n| `productGroup.deleted`| Triggered when an existing product group is deleted. |\n| `invoice.created`     | Triggered when a new receipt (e.g., bill, invoice, payment receipt) is created. |\n| `orderItem.created`   | Triggered when a gastro-order is booked on a table. |\n\n### Payloads\n- **For `created` and `updated` Events**:\n    - The full object is sent in the `resource` array of the webhook payload, eliminating the need for additional API calls.\n- **For `deleted` Events**:\n    - Only the IDs of the deleted resources are provided.\n\n## Getting Started\n1. **Set Up Webhook URL**: Configure your webhook endpoint in the `Webhook` section of the API dashboard.\n2. **Subscribe to Events**: Select the events (listed above) you want to receive notifications for.\n",
    "version": "R2-2025.22.2"
  },
  "paths": {
    "/access/revoke": {
      "post": {
        "tags": [
          "Account Token"
        ],
        "summary": "Revoke Account Token",
        "description": "This endpoint can be used to revoke the currently used API Account Token.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Access was revoked successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/accounting/financialYears": {
      "get": {
        "tags": [
          "AccountingFinancialYear"
        ],
        "summary": "List all Accounting Financial Years",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "accountingFinancialYear_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "accountingFinancialYear_number": {
                        "type": "integer",
                        "example": 477415141
                      },
                      "accountingFinancialYear_active": {
                        "type": "boolean",
                        "example": false
                      },
                      "accountingFinancialYear_trunkYear": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/accounting/financialYears/{id}": {
      "get": {
        "tags": [
          "AccountingFinancialYear"
        ],
        "summary": "Find Accounting Financial Year by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "accountingFinancialYear_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "accountingFinancialYear_number": {
                      "type": "integer",
                      "example": 477415141
                    },
                    "accountingFinancialYear_active": {
                      "type": "boolean",
                      "example": false
                    },
                    "accountingFinancialYear_trunkYear": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/billTypes": {
      "get": {
        "tags": [
          "BillType"
        ],
        "summary": "List all Bill Types",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "billType_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "billType_name": {
                        "type": "string",
                        "example": "Rechnung"
                      },
                      "billType_symbol": {
                        "type": "string",
                        "example": "RG"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/billTypes/{id}": {
      "get": {
        "tags": [
          "BillType"
        ],
        "summary": "Find Bill Type by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "billType_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "billType_name": {
                      "type": "string",
                      "example": "Rechnung"
                    },
                    "billType_symbol": {
                      "type": "string",
                      "example": "RG"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cashbook/export": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export Cashbook",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "dateFrom": {
                    "type": "string",
                    "example": "2021-08-01"
                  },
                  "dateTo": {
                    "type": "string",
                    "example": "2021-08-31"
                  },
                  "fileFormat": {
                    "type": "string",
                    "enum": [
                      "excel",
                      "pdf"
                    ],
                    "example": "pdf|excel"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobStatus_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "jobStatus_status": {
                      "type": "string",
                      "example": "finished"
                    },
                    "jobStatus_startedAt": {
                      "type": "string",
                      "example": "2019-08-02 08:08:13"
                    },
                    "jobStatus_finishedAt": {
                      "type": "string",
                      "example": "2019-08-02 08:08:14"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/export/accountancy": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export Accountancy",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "format": {
                    "description": "Use one of the possible export formats: bmd, bmd-ntcs, datev, sap, rzl",
                    "type": "string",
                    "example": "datev"
                  },
                  "year": {
                    "description": "Year for which the export should be generated (optional)",
                    "type": "integer",
                    "example": 2019
                  },
                  "month": {
                    "description": "Month for which the export should be generated (optional)",
                    "type": "integer",
                    "example": 1
                  },
                  "day": {
                    "description": "Day for which the export should be generated (optional)",
                    "type": "integer",
                    "example": 31
                  },
                  "exportCashbook": {
                    "description": "Whether to include cashbook transactions in the export",
                    "type": "boolean",
                    "example": true
                  },
                  "dataSource": {
                    "description": "Type of data-aggregation to use. Possible value are: invoice, eachItem, dailyReport_productGroups, dailyReport_accountingCode",
                    "type": "string",
                    "example": "invoice"
                  },
                  "financialYear": {
                    "description": "If format is datev the number of the financialYear has to be provided. See GET /accounting/financialYears",
                    "type": "integer",
                    "example": 2019
                  },
                  "from": {
                    "description": "If format is datev the start date of the financialYear has to be provided. See GET /accounting/financialYears",
                    "type": "string",
                    "example": "2019-01-01"
                  },
                  "to": {
                    "description": "If format is datev the end date of the financialYear has to be provided. See GET /accounting/financialYears",
                    "type": "string",
                    "example": "2019-12-31"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "file": {
                      "type": "string",
                      "example": "https://abc.cde.com"
                    },
                    "filename": {
                      "type": "string",
                      "example": 1234
                    },
                    "error": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/export/accountancy/cashbook": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export Cashbook",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "year": {
                    "type": "integer",
                    "example": 2019
                  },
                  "month": {
                    "type": "integer",
                    "example": 1
                  },
                  "day": {
                    "type": "integer",
                    "example": 31
                  },
                  "dateFrom": {
                    "type": "string",
                    "example": "2021-08-01"
                  },
                  "dateTo": {
                    "type": "string",
                    "example": "2021-08-31"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "file": {
                      "type": "string",
                      "example": "https://abc.cde.com"
                    },
                    "filename": {
                      "type": "string",
                      "example": 1234
                    },
                    "error": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/export/sales": {
      "post": {
        "tags": [
          "Export"
        ],
        "summary": "Export Sales",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "month": {
                    "type": "integer",
                    "example": 1
                  },
                  "year": {
                    "type": "integer",
                    "example": 2019
                  },
                  "filter": {
                    "description": "Filter your data",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "success"
                    },
                    "jobStatus_id": {
                      "type": "integer",
                      "example": 123
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "List all Countries",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "country_id": {
                        "type": "integer",
                        "example": 123
                      },
                      "country_code": {
                        "type": "string",
                        "example": "AT"
                      },
                      "country_name": {
                        "type": "string",
                        "example": "Austria"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/countries/{id}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Find Country by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Country id to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "country_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "country_code": {
                      "type": "string",
                      "example": "AT"
                    },
                    "country_name": {
                      "type": "string",
                      "example": "Austria"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/couponCategories": {
      "get": {
        "tags": [
          "CouponCategory"
        ],
        "summary": "List all Coupon Categories",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "couponCategory_id": {
                        "type": "integer",
                        "example": 123
                      },
                      "couponCategory_name": {
                        "type": "string",
                        "example": "my coupon category"
                      },
                      "couponCategory_description": {
                        "type": "string",
                        "example": "my great coupon category"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "CouponCategory"
        ],
        "summary": "Create a new Coupon Category",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload3"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "couponCategory_name": {
                      "type": "string",
                      "example": "my coupon category"
                    },
                    "couponCategory_description": {
                      "type": "string",
                      "example": "my great coupon category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/couponCategories/{id}": {
      "get": {
        "tags": [
          "CouponCategory"
        ],
        "summary": "Find Coupon Category by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon Category ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "couponCategory_name": {
                      "type": "string",
                      "example": "my coupon category"
                    },
                    "couponCategory_description": {
                      "type": "string",
                      "example": "my great coupon category"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "CouponCategory"
        ],
        "summary": "Update Coupon Category by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon Category ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload3"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "couponCategory_name": {
                      "type": "string",
                      "example": "my coupon category"
                    },
                    "couponCategory_description": {
                      "type": "string",
                      "example": "my great coupon category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CouponCategory"
        ],
        "summary": "Delete Coupon Category by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon Category ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Coupon Category was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/coupons": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "List all Coupons",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "Identifier/Code of coupon",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainingMode",
            "in": "query",
            "description": "Trainingmode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "coupon_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "coupon_name": {
                        "type": "string",
                        "example": "Christmas Coupon"
                      },
                      "coupon_containsVat": {
                        "type": "string",
                        "example": 20
                      },
                      "coupon_purpose": {
                        "type": "string",
                        "example": "single|multi"
                      },
                      "coupon_identifier": {
                        "type": "string",
                        "example": 9995071228303
                      },
                      "coupon_testMode": {
                        "type": "boolean",
                        "example": true
                      },
                      "coupon_validUntil": {
                        "type": "string",
                        "example": "2020-01-31 00:49:39"
                      },
                      "coupon_issuedAt": {
                        "type": "string",
                        "example": "2018-01-31 00:49:39"
                      },
                      "couponCategory_id": {
                        "type": "integer",
                        "example": 4
                      },
                      "vat_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "product_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "customer_id": {
                        "type": "integer",
                        "example": 7455
                      },
                      "coupon_created_at": {
                        "type": "string",
                        "example": "2018-01-31 00:49:39"
                      },
                      "coupon_updated_at": {
                        "type": "string",
                        "example": "2018-01-31 04:49:39"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Coupon"
        ],
        "summary": "Create a new Coupon",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "coupon_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "coupon_name": {
                      "type": "string",
                      "example": "Christmas Coupon"
                    },
                    "coupon_containsVat": {
                      "type": "string",
                      "example": 20
                    },
                    "coupon_purpose": {
                      "type": "string",
                      "example": "single|multi"
                    },
                    "coupon_identifier": {
                      "type": "string",
                      "example": 9995071228303
                    },
                    "coupon_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "coupon_validUntil": {
                      "type": "string",
                      "example": "2020-01-31 00:49:39"
                    },
                    "coupon_issuedAt": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 4
                    },
                    "vat_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 7455
                    },
                    "coupon_created_at": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "coupon_updated_at": {
                      "type": "string",
                      "example": "2018-01-31 04:49:39"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/coupons/{id}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Find Coupon by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "coupon_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "coupon_name": {
                      "type": "string",
                      "example": "Christmas Coupon"
                    },
                    "coupon_containsVat": {
                      "type": "string",
                      "example": 20
                    },
                    "coupon_purpose": {
                      "type": "string",
                      "example": "single|multi"
                    },
                    "coupon_identifier": {
                      "type": "string",
                      "example": 9995071228303
                    },
                    "coupon_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "coupon_validUntil": {
                      "type": "string",
                      "example": "2020-01-31 00:49:39"
                    },
                    "coupon_issuedAt": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 4
                    },
                    "vat_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 7455
                    },
                    "coupon_created_at": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "coupon_updated_at": {
                      "type": "string",
                      "example": "2018-01-31 04:49:39"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Coupon"
        ],
        "summary": "Update Coupon by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "coupon_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "coupon_name": {
                      "type": "string",
                      "example": "Christmas Coupon"
                    },
                    "coupon_containsVat": {
                      "type": "string",
                      "example": 20
                    },
                    "coupon_purpose": {
                      "type": "string",
                      "example": "single|multi"
                    },
                    "coupon_identifier": {
                      "type": "string",
                      "example": 9995071228303
                    },
                    "coupon_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "coupon_validUntil": {
                      "type": "string",
                      "example": "2020-01-31 00:49:39"
                    },
                    "coupon_issuedAt": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 4
                    },
                    "vat_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 7455
                    },
                    "coupon_created_at": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "coupon_updated_at": {
                      "type": "string",
                      "example": "2018-01-31 04:49:39"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Coupon"
        ],
        "summary": "Delete Coupon by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Coupon was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/coupons/{id}/charge": {
      "post": {
        "tags": [
          "Coupon"
        ],
        "summary": "Charge By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon ID to charge",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "value": {
                    "description": "Charge value",
                    "type": "string",
                    "example": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "coupon_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "coupon_name": {
                      "type": "string",
                      "example": "Christmas Coupon"
                    },
                    "coupon_containsVat": {
                      "type": "string",
                      "example": 20
                    },
                    "coupon_purpose": {
                      "type": "string",
                      "example": "single|multi"
                    },
                    "coupon_identifier": {
                      "type": "string",
                      "example": 9995071228303
                    },
                    "coupon_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "coupon_validUntil": {
                      "type": "string",
                      "example": "2020-01-31 00:49:39"
                    },
                    "coupon_issuedAt": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 4
                    },
                    "vat_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 7455
                    },
                    "coupon_created_at": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "coupon_updated_at": {
                      "type": "string",
                      "example": "2018-01-31 04:49:39"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/coupons/{id}/redeem": {
      "post": {
        "tags": [
          "Coupon"
        ],
        "summary": "Redeem By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon ID to redeem",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "value": {
                    "description": "Redemption value",
                    "type": "string",
                    "example": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "coupon_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "coupon_name": {
                      "type": "string",
                      "example": "Christmas Coupon"
                    },
                    "coupon_containsVat": {
                      "type": "string",
                      "example": 20
                    },
                    "coupon_purpose": {
                      "type": "string",
                      "example": "single|multi"
                    },
                    "coupon_identifier": {
                      "type": "string",
                      "example": 9995071228303
                    },
                    "coupon_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "coupon_validUntil": {
                      "type": "string",
                      "example": "2020-01-31 00:49:39"
                    },
                    "coupon_issuedAt": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "couponCategory_id": {
                      "type": "integer",
                      "example": 4
                    },
                    "vat_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 7455
                    },
                    "coupon_created_at": {
                      "type": "string",
                      "example": "2018-01-31 00:49:39"
                    },
                    "coupon_updated_at": {
                      "type": "string",
                      "example": "2018-01-31 04:49:39"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get Currencies",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "currency_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "currency_name": {
                        "type": "string",
                        "example": "Euro"
                      },
                      "currency_short": {
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/currencies/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get Currency",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Currency ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "currency_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "currency_name": {
                      "type": "string",
                      "example": "Euro"
                    },
                    "currency_short": {
                      "type": "string",
                      "example": "EUR"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customerCategories": {
      "get": {
        "tags": [
          "CustomerGroup"
        ],
        "summary": "Get All Customer Groups",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "customerCategory_id": {
                        "type": "integer",
                        "example": 123
                      },
                      "customerCategory_name": {
                        "type": "string",
                        "example": "a customer group"
                      },
                      "customerCategory_description": {
                        "type": "string",
                        "example": "a customer group description"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "CustomerGroup"
        ],
        "summary": "Create Customer Group",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload2"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "customerCategory_name": {
                      "type": "string",
                      "example": "a customer group"
                    },
                    "customerCategory_description": {
                      "type": "string",
                      "example": "a customer group description"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customerCategories/{id}": {
      "get": {
        "tags": [
          "CustomerGroup"
        ],
        "summary": "Get Customer Group By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Group ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "customerCategory_name": {
                      "type": "string",
                      "example": "a customer group"
                    },
                    "customerCategory_description": {
                      "type": "string",
                      "example": "a customer group description"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "CustomerGroup"
        ],
        "summary": "Update Customer Group",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Group ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload2"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "customerCategory_name": {
                      "type": "string",
                      "example": "a customer group"
                    },
                    "customerCategory_description": {
                      "type": "string",
                      "example": "a customer group description"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CustomerGroup"
        ],
        "summary": "Delete Customer Group",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Group ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "CustomerCategory was successfully deleted."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "List all Customers",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "customer_id": {
                        "type": "integer",
                        "example": 9999
                      },
                      "customer_number": {
                        "type": "integer",
                        "example": 9999
                      },
                      "customer_name": {
                        "type": "string",
                        "example": "Maxi's custom name"
                      },
                      "vatId": {
                        "type": "string",
                        "example": "ATU1234567"
                      },
                      "customer_company": {
                        "type": "string",
                        "example": "Maxi Gmbh"
                      },
                      "salutation": {
                        "type": "string",
                        "example": "Herr"
                      },
                      "title": {
                        "type": "string",
                        "example": "Professor"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Muster"
                      },
                      "firstName": {
                        "type": "string",
                        "example": "Max"
                      },
                      "zip": {
                        "type": "string",
                        "example": 1030
                      },
                      "city": {
                        "type": "string",
                        "example": "WIen"
                      },
                      "street": {
                        "type": "string",
                        "example": "StraÃŸe 1"
                      },
                      "email": {
                        "type": "string",
                        "example": "example@ready2order.com"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+43 664 12345678"
                      },
                      "customer_notes": {
                        "type": "string",
                        "example": "Some custom notes"
                      },
                      "customerCategory_id": {
                        "type": "integer",
                        "example": 9999
                      },
                      "customer_birthday": {
                        "type": "string",
                        "example": "1991-09-20"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new Customer",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload4"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customer_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_number": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_name": {
                      "type": "string",
                      "example": "Maxi's custom name"
                    },
                    "vatId": {
                      "type": "string",
                      "example": "ATU1234567"
                    },
                    "customer_company": {
                      "type": "string",
                      "example": "Maxi Gmbh"
                    },
                    "salutation": {
                      "type": "string",
                      "example": "Herr"
                    },
                    "title": {
                      "type": "string",
                      "example": "Professor"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Muster"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Max"
                    },
                    "zip": {
                      "type": "string",
                      "example": 1030
                    },
                    "city": {
                      "type": "string",
                      "example": "WIen"
                    },
                    "street": {
                      "type": "string",
                      "example": "StraÃŸe 1"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@ready2order.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+43 664 12345678"
                    },
                    "customer_notes": {
                      "type": "string",
                      "example": "Some custom notes"
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_birthday": {
                      "type": "string",
                      "example": "1991-09-20"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find Customer by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customer_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_number": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_name": {
                      "type": "string",
                      "example": "Maxi's custom name"
                    },
                    "vatId": {
                      "type": "string",
                      "example": "ATU1234567"
                    },
                    "customer_company": {
                      "type": "string",
                      "example": "Maxi Gmbh"
                    },
                    "salutation": {
                      "type": "string",
                      "example": "Herr"
                    },
                    "title": {
                      "type": "string",
                      "example": "Professor"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Muster"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Max"
                    },
                    "zip": {
                      "type": "string",
                      "example": 1030
                    },
                    "city": {
                      "type": "string",
                      "example": "WIen"
                    },
                    "street": {
                      "type": "string",
                      "example": "StraÃŸe 1"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@ready2order.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+43 664 12345678"
                    },
                    "customer_notes": {
                      "type": "string",
                      "example": "Some custom notes"
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_birthday": {
                      "type": "string",
                      "example": "1991-09-20"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update Customer by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload4"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customer_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_number": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_name": {
                      "type": "string",
                      "example": "Maxi's custom name"
                    },
                    "vatId": {
                      "type": "string",
                      "example": "ATU1234567"
                    },
                    "customer_company": {
                      "type": "string",
                      "example": "Maxi Gmbh"
                    },
                    "salutation": {
                      "type": "string",
                      "example": "Herr"
                    },
                    "title": {
                      "type": "string",
                      "example": "Professor"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Muster"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Max"
                    },
                    "zip": {
                      "type": "string",
                      "example": 1030
                    },
                    "city": {
                      "type": "string",
                      "example": "WIen"
                    },
                    "street": {
                      "type": "string",
                      "example": "StraÃŸe 1"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@ready2order.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+43 664 12345678"
                    },
                    "customer_notes": {
                      "type": "string",
                      "example": "Some custom notes"
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "customer_birthday": {
                      "type": "string",
                      "example": "1991-09-20"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete Customer by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Customer was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customers/merge": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Merge Customers",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "masterCustomer": {
                    "description": "Customer into which the list of customerIds should be merged into.",
                    "type": "integer",
                    "example": 5924
                  },
                  "customerIds": {
                    "description": "List of customers which shall be merged into masterCustomer.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1,
                      2,
                      3,
                      4
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Merged successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/dailyReport/open": {
      "put": {
        "tags": [
          "DailyReport"
        ],
        "summary": "Open",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Day was opened successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/dailyReport/close": {
      "put": {
        "tags": [
          "DailyReport"
        ],
        "summary": "Close",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Day was closed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/dailyReport/status": {
      "get": {
        "tags": [
          "DailyReport"
        ],
        "summary": "Status",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "success"
                    },
                    "status": {
                      "type": "string",
                      "example": "open"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/developerToken/grantAccessToken": {
      "post": {
        "tags": [
          "Grant Access Token"
        ],
        "summary": "Create Grant Access Token",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "authorizationCallbackUri": {
                    "description": "The callback to which the merchant will be redirected if access will be granted.",
                    "type": "string",
                    "example": "https://example.com?auth=succeess"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "expiresAt": {
                      "type": "string",
                      "example": 1641546585
                    },
                    "grantAccessUri": {
                      "type": "string",
                      "example": "https://my.ready2order.com/api/grantAccess/abcdef_token"
                    },
                    "grantAccessToken": {
                      "type": "string",
                      "example": "abcdef_token (JWT token)"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/developerToken/grantAccessToken/{token}": {
      "get": {
        "tags": [
          "Grant Access Token"
        ],
        "summary": "Get Grant Access Token Status",
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Grant-access token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "pending, expired, granted, denied"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/discountGroups": {
      "get": {
        "tags": [
          "DiscountGroup"
        ],
        "summary": "Get All Discount Groups",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "discountGroup_id": {
                        "type": "integer",
                        "example": 74890
                      },
                      "discountGroup_name": {
                        "type": "string",
                        "example": "Barzahlung"
                      },
                      "discountGroup_description": {
                        "type": "string",
                        "example": "just a description"
                      },
                      "discountGroup_active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "DiscountGroup"
        ],
        "summary": "Create Discount Group",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload5"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discountGroup_id": {
                      "type": "integer",
                      "example": 74890
                    },
                    "discountGroup_name": {
                      "type": "string",
                      "example": "Barzahlung"
                    },
                    "discountGroup_description": {
                      "type": "string",
                      "example": "just a description"
                    },
                    "discountGroup_active": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/discountGroups/{id}": {
      "get": {
        "tags": [
          "DiscountGroup"
        ],
        "summary": "Get Discount Group",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discountGroup_id": {
                      "type": "integer",
                      "example": 74890
                    },
                    "discountGroup_name": {
                      "type": "string",
                      "example": "Barzahlung"
                    },
                    "discountGroup_description": {
                      "type": "string",
                      "example": "just a description"
                    },
                    "discountGroup_active": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "DiscountGroup"
        ],
        "summary": "Update Discount Group",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload5"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discountGroup_id": {
                      "type": "integer",
                      "example": 74890
                    },
                    "discountGroup_name": {
                      "type": "string",
                      "example": "Barzahlung"
                    },
                    "discountGroup_description": {
                      "type": "string",
                      "example": "just a description"
                    },
                    "discountGroup_active": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DiscountGroup"
        ],
        "summary": "Delete Discount Group",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "DiscountGroup was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/discounts": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "List all Discounts",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "discount_id": {
                        "type": "integer",
                        "example": 123
                      },
                      "discount_name": {
                        "type": "string",
                        "example": "Discount"
                      },
                      "discount_description": {
                        "type": "string",
                        "example": "A discount description"
                      },
                      "discount_value": {
                        "type": "string",
                        "example": 30
                      },
                      "discount_unit": {
                        "type": "string",
                        "example": "custom"
                      },
                      "discount_active": {
                        "type": "boolean",
                        "example": true
                      },
                      "discount_order": {
                        "type": "integer",
                        "example": 0
                      },
                      "discountGroup_id": {
                        "type": "integer",
                        "example": 116
                      },
                      "discount_created_at": {
                        "type": "string",
                        "example": "2018-12-20 11:00:00"
                      },
                      "discount_updated_at": {
                        "type": "string",
                        "example": "2018-12-20 11:15:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Create a new Discount",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload6"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discount_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "discount_name": {
                      "type": "string",
                      "example": "Discount"
                    },
                    "discount_description": {
                      "type": "string",
                      "example": "A discount description"
                    },
                    "discount_value": {
                      "type": "string",
                      "example": 30
                    },
                    "discount_unit": {
                      "type": "string",
                      "example": "custom"
                    },
                    "discount_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "discount_order": {
                      "type": "integer",
                      "example": 0
                    },
                    "discountGroup_id": {
                      "type": "integer",
                      "example": 116
                    },
                    "discount_created_at": {
                      "type": "string",
                      "example": "2018-12-20 11:00:00"
                    },
                    "discount_updated_at": {
                      "type": "string",
                      "example": "2018-12-20 11:15:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/discounts/{id}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Find Discount by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discount_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "discount_name": {
                      "type": "string",
                      "example": "Discount"
                    },
                    "discount_description": {
                      "type": "string",
                      "example": "A discount description"
                    },
                    "discount_value": {
                      "type": "string",
                      "example": 30
                    },
                    "discount_unit": {
                      "type": "string",
                      "example": "custom"
                    },
                    "discount_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "discount_order": {
                      "type": "integer",
                      "example": 0
                    },
                    "discountGroup_id": {
                      "type": "integer",
                      "example": 116
                    },
                    "discount_created_at": {
                      "type": "string",
                      "example": "2018-12-20 11:00:00"
                    },
                    "discount_updated_at": {
                      "type": "string",
                      "example": "2018-12-20 11:15:00"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Discount"
        ],
        "summary": "Update Discount by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload6"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discount_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "discount_name": {
                      "type": "string",
                      "example": "Discount"
                    },
                    "discount_description": {
                      "type": "string",
                      "example": "A discount description"
                    },
                    "discount_value": {
                      "type": "string",
                      "example": 30
                    },
                    "discount_unit": {
                      "type": "string",
                      "example": "custom"
                    },
                    "discount_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "discount_order": {
                      "type": "integer",
                      "example": 0
                    },
                    "discountGroup_id": {
                      "type": "integer",
                      "example": 116
                    },
                    "discount_created_at": {
                      "type": "string",
                      "example": "2018-12-20 11:00:00"
                    },
                    "discount_updated_at": {
                      "type": "string",
                      "example": "2018-12-20 11:15:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Delete Discount by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Discount was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/document/invoice": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "List all Bills",
        "description": "",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Offset (Default: 0)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (Default: 25)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query (For example: RG2018/1)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableId",
            "in": "query",
            "description": "Table-Id which should be filtered (For example: 1234)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer-Id which should be filtered (For example: 1234)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dateField",
            "in": "query",
            "description": "Date field you want to query (Possible values: dr_startDate or b_dateTime)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Date from (For example: 2019-01-01)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Date to (For example: 2019-12-31",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testMode",
            "in": "query",
            "description": "Trainingmode on/off",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "items",
            "in": "query",
            "description": "Include list of items (Default: false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "discounts",
            "in": "query",
            "description": "Include list of discounts (Default: false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "payments",
            "in": "query",
            "description": "Include list of payments (Default: false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "payment",
            "in": "query",
            "description": "[DEPRECATED] Include list of payments. Please use 'payments' instead (Default: false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "invoice_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "invoice_reference_id": {
                            "type": "integer",
                            "example": 1233
                          },
                          "invoice_timestamp": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "invoice_number": {
                            "type": "integer",
                            "example": 1
                          },
                          "invoice_numberFull": {
                            "type": "string",
                            "example": "RG2019/1"
                          },
                          "invoice_total": {
                            "type": "string",
                            "example": 12
                          },
                          "invoice_totalNet": {
                            "type": "string",
                            "example": 10
                          },
                          "invoice_totalVat": {
                            "type": "string",
                            "example": 2
                          },
                          "invoice_totalTip": {
                            "type": "string",
                            "example": 0
                          },
                          "invoice_address_company": {
                            "type": "string",
                            "example": "ready2order GmbH"
                          },
                          "invoice_address_vatId": {
                            "type": "string",
                            "example": "ATU12341234"
                          },
                          "invoice_address_salutation": {
                            "type": "string",
                            "example": "Mr/Ms"
                          },
                          "invoice_address_title": {
                            "type": "string",
                            "example": "Professor"
                          },
                          "invoice_address_firstName": {
                            "type": "string",
                            "example": "Chris"
                          },
                          "invoice_address_lastName": {
                            "type": "string",
                            "example": "Fox"
                          },
                          "invoice_address_street": {
                            "type": "string",
                            "example": "Hintere ZollamtsstraÃŸe 17"
                          },
                          "invoice_address_city": {
                            "type": "string",
                            "example": "Vienna"
                          },
                          "invoice_address_zip": {
                            "type": "string",
                            "example": 1030
                          },
                          "invoice_address_country": {
                            "type": "string",
                            "example": "AT"
                          },
                          "invoice_address_email": {
                            "type": "string",
                            "example": "dux@fox.com"
                          },
                          "invoice_address_phone": {
                            "type": "string",
                            "example": "+43 664 1234 1234 1234"
                          },
                          "invoice_inPrinterQueue": {
                            "type": "boolean",
                            "example": true
                          },
                          "invoice_priceBase": {
                            "type": "string",
                            "example": "brutto"
                          },
                          "invoice_deleted_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "invoice_deletedReason": {
                            "type": "string",
                            "example": "Some reason"
                          },
                          "invoice_pdf": {
                            "type": "string",
                            "example": "http://some.link"
                          },
                          "invoice_textBeforeItemsTable": {
                            "type": "string",
                            "example": "Some text"
                          },
                          "invoice_text": {
                            "type": "string",
                            "example": "Some text"
                          },
                          "invoice_locked": {
                            "type": "boolean",
                            "example": true
                          },
                          "invoice_externalReferenceNumber": {
                            "type": "string",
                            "example": "REF-1234"
                          },
                          "invoice_internalInvoiceReferenceNumber": {
                            "type": "string",
                            "example": 1233
                          },
                          "invoice_dueDate": {
                            "type": "string",
                            "example": "2019-01-05"
                          },
                          "invoice_deliveryDate": {
                            "type": "string",
                            "example": "2019-01-01"
                          },
                          "invoice_paid": {
                            "type": "boolean",
                            "example": true
                          },
                          "invoice_paidDate": {
                            "type": "string",
                            "example": "2019-01-01"
                          },
                          "invoice_testMode": {
                            "type": "boolean",
                            "example": true
                          },
                          "invoice_formatVersion": {
                            "type": "integer",
                            "example": 2
                          },
                          "customer_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "customerCategory_id": {
                            "type": "integer",
                            "example": 1023
                          },
                          "table_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "tableArea_id": {
                            "type": "integer",
                            "example": 67
                          },
                          "paymentMethod_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "printer_id": {
                            "type": "integer",
                            "example": 23
                          },
                          "billType_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "currency_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "item_id": {
                                  "type": "integer",
                                  "example": 76234
                                },
                                "item_timestamp": {
                                  "type": "string",
                                  "example": "2019-01-01 00:00:00"
                                },
                                "item_quantity": {
                                  "type": "string",
                                  "example": 1
                                },
                                "item_retour": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "item_number": {
                                  "type": "string",
                                  "example": 1
                                },
                                "item_serialNumber": {
                                  "type": "string",
                                  "example": "some-serial-number"
                                },
                                "item_expirationDate": {
                                  "type": "string",
                                  "example": "2019-01-01 00:00:00"
                                },
                                "item_name": {
                                  "type": "string",
                                  "example": "MyProductName"
                                },
                                "item_comment": {
                                  "type": "string",
                                  "example": "my-optional-comment"
                                },
                                "item_price": {
                                  "type": "string",
                                  "example": 12
                                },
                                "item_priceNet": {
                                  "type": "string",
                                  "example": 10
                                },
                                "item_priceBase": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "item_total": {
                                  "type": "string",
                                  "example": 12
                                },
                                "item_totalNet": {
                                  "type": "string",
                                  "example": 10
                                },
                                "item_vat": {
                                  "type": "string",
                                  "example": 2
                                },
                                "item_vatRate": {
                                  "type": "string",
                                  "example": 20
                                },
                                "item_vatCompensation": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_undiscountedSumBeforeLineDiscount": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_undiscountedSumBeforeInvoiceDiscount": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_lineDiscountId": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "item_lineDiscountGroupId": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "item_lineDiscountName": {
                                  "type": "string",
                                  "example": "SomeDiscountName"
                                },
                                "item_lineDiscountPercent": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_lineDiscountNet": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_lineDiscountGross": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_invoiceDiscountNet": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_invoiceDiscountGross": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_discountable": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "paymentMethod_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "item_updatedStock": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "product_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "productgroup_name": {
                                  "type": "string",
                                  "example": "My product group"
                                },
                                "productGroup_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "customer_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "user_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "user_name": {
                                  "type": "string",
                                  "example": "SomeUser"
                                },
                                "invoice_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "deliveryBill_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "dailyReport_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "productUnit_id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "table_id": {
                                  "type": "integer",
                                  "example": 1234
                                },
                                "table_name": {
                                  "type": "string",
                                  "example": "SomeTableName"
                                },
                                "payment_id": {
                                  "type": "integer",
                                  "example": 431
                                },
                                "retourInvoice_id": {
                                  "type": "integer",
                                  "example": 1233
                                },
                                "item_accountingCode": {
                                  "type": "string",
                                  "example": 4000
                                },
                                "item_testMode": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "item_product_price": {
                                  "type": "string",
                                  "example": 12
                                },
                                "item_product_priceNet": {
                                  "type": "string",
                                  "example": 10
                                },
                                "item_product_vat": {
                                  "type": "string",
                                  "example": 2
                                },
                                "item_qty": {
                                  "type": "string",
                                  "example": 1
                                },
                                "item_product_vatRate": {
                                  "type": "string",
                                  "example": 20
                                },
                                "item_product_vatCompensation": {
                                  "type": "string",
                                  "example": 0
                                },
                                "item_product_priceNetPerUnit": {
                                  "type": "string",
                                  "example": 10
                                },
                                "item_product_pricePerUnit": {
                                  "type": "string",
                                  "example": 12
                                },
                                "item_product_discountable": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            }
                          },
                          "address": {
                            "properties": {
                              "company": {
                                "type": "string",
                                "example": "ready2order GmbH"
                              },
                              "vatId": {
                                "type": "string",
                                "example": "ATU12341234"
                              },
                              "salutation": {
                                "type": "string",
                                "example": "Mr/Ms"
                              },
                              "title": {
                                "type": "string",
                                "example": "Professor"
                              },
                              "firstName": {
                                "type": "string",
                                "example": "Chris"
                              },
                              "lastName": {
                                "type": "string",
                                "example": "Muster"
                              },
                              "street": {
                                "type": "string",
                                "example": "SomeStreet 1234"
                              },
                              "city": {
                                "type": "string",
                                "example": "Vienna"
                              },
                              "zip": {
                                "type": "string",
                                "example": 1030
                              },
                              "country": {
                                "type": "string",
                                "example": "AT"
                              },
                              "email": {
                                "type": "string",
                                "example": "dummy@email.com"
                              },
                              "phone": {
                                "type": "string",
                                "example": "+43 1234 12312341234"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "properties": {
                              "billType_id": {
                                "type": "integer",
                                "example": 1
                              },
                              "billType_name": {
                                "type": "string",
                                "example": "Rechnung"
                              },
                              "billType_symbol": {
                                "type": "string",
                                "example": "RG"
                              }
                            },
                            "type": "object"
                          },
                          "payment": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "billPayment_id": {
                                  "type": "integer",
                                  "example": 9999
                                },
                                "billPayment_name": {
                                  "type": "string",
                                  "example": "Cash"
                                },
                                "billPayment_value": {
                                  "type": "string",
                                  "example": 12
                                },
                                "payment_id": {
                                  "type": "integer",
                                  "example": 431
                                },
                                "referenced_bill_id": {
                                  "type": "integer",
                                  "example": 1234
                                }
                              }
                            }
                          },
                          "transaction": {
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "TFRG4C6NG2"
                              },
                              "r2o_id": {
                                "type": "string",
                                "example": "U1JGILYS"
                              }
                            },
                            "type": "object"
                          },
                          "discounts": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "billDiscount_id": {
                                  "type": "integer",
                                  "example": 9999
                                },
                                "billDiscount_name": {
                                  "type": "string",
                                  "example": "SomeDiscountName"
                                },
                                "billDiscount_value": {
                                  "type": "string",
                                  "example": 0
                                },
                                "billDiscount_percent": {
                                  "type": "string",
                                  "example": 0
                                },
                                "billDiscount_discount_id": {
                                  "type": "integer",
                                  "example": 9999
                                },
                                "billDiscount_discountGroup_id": {
                                  "type": "integer",
                                  "example": 9999
                                },
                                "billDiscount_created_at": {
                                  "type": "string",
                                  "example": "2019-01-01 00:00:00"
                                },
                                "billDiscount_updated_at": {
                                  "type": "string",
                                  "example": "2019-01-01 00:00:00"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer",
                      "example": 50
                    },
                    "offset": {
                      "type": "integer",
                      "example": 0
                    },
                    "limit": {
                      "type": "integer",
                      "example": 50
                    },
                    "dateFrom": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "dateTo": {
                      "type": "string",
                      "example": "2019-12-31"
                    },
                    "query": {
                      "type": "string",
                      "example": "some-query"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Create Bill",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "paymentMethod_id": {
                    "description": "PaymentMethod ID",
                    "type": "integer",
                    "example": 123456
                  },
                  "user_id": {
                    "description": "User ID",
                    "type": "integer",
                    "example": 123456
                  },
                  "table_id": {
                    "description": "Table ID",
                    "type": "integer",
                    "example": 4321
                  },
                  "billType_id": {
                    "description": "BillType ID",
                    "type": "integer",
                    "example": 1
                  },
                  "printer_id": {
                    "description": "Printer ID on which the bill should be printed",
                    "type": "integer",
                    "example": 1
                  },
                  "printingProfile_id": {
                    "description": "PrintingProfile ID on which the bill should be printed.",
                    "type": "integer",
                    "example": 1
                  },
                  "invoice_inPrinterQueue": {
                    "description": "Decide how many copies should be printed (1 is original receipt)",
                    "type": "integer",
                    "example": 1
                  },
                  "invoice_textBeforeItemsTable": {
                    "description": "Text shown before items table on bill PDF",
                    "type": "string",
                    "example": "Some text"
                  },
                  "invoice_text": {
                    "description": "Text shown after items table on bill PDF",
                    "type": "string",
                    "example": "Some text"
                  },
                  "invoice_externalReferenceNumber": {
                    "description": "External reference number for the bill",
                    "type": "string",
                    "example": "REF-1234"
                  },
                  "invoice_priceBase": {
                    "description": "Pricebase",
                    "type": "string",
                    "enum": [
                      "0",
                      "1",
                      "brutto",
                      "netto",
                      "gross",
                      "net"
                    ],
                    "example": "brutto"
                  },
                  "invoice_testMode": {
                    "description": "Trainingmode",
                    "type": "boolean",
                    "example": false
                  },
                  "createPDF": {
                    "description": "Whether to create and return PDF or not",
                    "type": "boolean",
                    "example": false
                  },
                  "pdfFormat": {
                    "description": "PDF format",
                    "type": "string",
                    "example": "A4, 80mm or 58mm"
                  },
                  "invoice_showRecipient": {
                    "description": "Show additional lines on invoice receipt",
                    "type": "boolean",
                    "example": false
                  },
                  "invoice_paid": {
                    "description": "Wether invoice should be marked as paid or not",
                    "type": "boolean",
                    "example": false
                  },
                  "invoice_dueDate": {
                    "description": "Due date",
                    "type": "string",
                    "example": "2019-01-15"
                  },
                  "invoice_paidDate": {
                    "description": "Paid date",
                    "type": "string",
                    "example": "2019-01-15"
                  },
                  "items": {
                    "description": "List of items",
                    "type": "array",
                    "items": {
                      "properties": {
                        "item_quantity": {
                          "type": "string",
                          "example": 1
                        },
                        "item_name": {
                          "type": "string",
                          "example": "MyProductName"
                        },
                        "item_comment": {
                          "type": "string",
                          "example": "MyProductDescription"
                        },
                        "item_price": {
                          "type": "string",
                          "example": 12
                        },
                        "item_vatRate": {
                          "description": "Please use vatId instead",
                          "type": "string",
                          "example": 20
                        },
                        "item_vatId": {
                          "type": "integer",
                          "example": 12345
                        },
                        "item_priceBase": {
                          "type": "string",
                          "example": "brutto or netto"
                        },
                        "product_id": {
                          "type": "integer",
                          "example": 1234
                        },
                        "discount_id": {
                          "type": "integer",
                          "example": 1234
                        },
                        "discount_value": {
                          "type": "string",
                          "example": 0
                        },
                        "discount_unit": {
                          "type": "string",
                          "example": "percent or currency"
                        },
                        "item_variations": {
                          "description": "List of product variations",
                          "type": "array",
                          "items": {
                            "properties": {
                              "product_id": {
                                "description": "Id of product variation",
                                "type": "integer",
                                "example": 1
                              },
                              "variation_name": {
                                "description": "Product variation name",
                                "type": "string",
                                "example": "Schnitzel with chips and mayo"
                              },
                              "variation_price": {
                                "description": "Product variation price",
                                "type": "string",
                                "example": 15.2
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "orderItem_ids": {
                    "description": "List of orderItemIds to process the invoice for",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1,
                      2,
                      3
                    ]
                  },
                  "address": {
                    "description": "Address object",
                    "type": "array",
                    "items": {
                      "properties": {
                        "company": {
                          "type": "string",
                          "example": "ready2order GmbH"
                        },
                        "vatId": {
                          "type": "string",
                          "example": "ATU12341234"
                        },
                        "salutation": {
                          "type": "string",
                          "example": "Mr/Mrs"
                        },
                        "title": {
                          "type": "string",
                          "example": "Professor"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Chris"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Muster"
                        },
                        "street": {
                          "type": "string",
                          "example": "SomeStreet 1234"
                        },
                        "city": {
                          "type": "string",
                          "example": "Vienna"
                        },
                        "zip": {
                          "type": "string",
                          "example": 1030
                        },
                        "country": {
                          "type": "string",
                          "example": "AT"
                        },
                        "email": {
                          "type": "string",
                          "example": "dummy@email.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "+43 1234 12312341234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invoice_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "invoice_reference_id": {
                      "type": "integer",
                      "example": 1233
                    },
                    "invoice_timestamp": {
                      "type": "string",
                      "example": "2019-01-01 00:00:00"
                    },
                    "invoice_number": {
                      "type": "integer",
                      "example": 1
                    },
                    "invoice_numberFull": {
                      "type": "string",
                      "example": "RG2019/1"
                    },
                    "invoice_total": {
                      "type": "string",
                      "example": 12
                    },
                    "invoice_totalNet": {
                      "type": "string",
                      "example": 10
                    },
                    "invoice_totalVat": {
                      "type": "string",
                      "example": 2
                    },
                    "invoice_totalTip": {
                      "type": "string",
                      "example": 0
                    },
                    "invoice_address_company": {
                      "type": "string",
                      "example": "ready2order GmbH"
                    },
                    "invoice_address_vatId": {
                      "type": "string",
                      "example": "ATU12341234"
                    },
                    "invoice_address_salutation": {
                      "type": "string",
                      "example": "Mr/Ms"
                    },
                    "invoice_address_title": {
                      "type": "string",
                      "example": "Professor"
                    },
                    "invoice_address_firstName": {
                      "type": "string",
                      "example": "Chris"
                    },
                    "invoice_address_lastName": {
                      "type": "string",
                      "example": "Fox"
                    },
                    "invoice_address_street": {
                      "type": "string",
                      "example": "Hintere ZollamtsstraÃŸe 17"
                    },
                    "invoice_address_city": {
                      "type": "string",
                      "example": "Vienna"
                    },
                    "invoice_address_zip": {
                      "type": "string",
                      "example": 1030
                    },
                    "invoice_address_country": {
                      "type": "string",
                      "example": "AT"
                    },
                    "invoice_address_email": {
                      "type": "string",
                      "example": "dux@fox.com"
                    },
                    "invoice_address_phone": {
                      "type": "string",
                      "example": "+43 664 1234 1234 1234"
                    },
                    "invoice_inPrinterQueue": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_priceBase": {
                      "type": "string",
                      "example": "brutto"
                    },
                    "invoice_deleted_at": {
                      "type": "string",
                      "example": "2019-01-01 00:00:00"
                    },
                    "invoice_deletedReason": {
                      "type": "string",
                      "example": "Some reason"
                    },
                    "invoice_pdf": {
                      "type": "string",
                      "example": "http://some.link"
                    },
                    "invoice_textBeforeItemsTable": {
                      "type": "string",
                      "example": "Some text"
                    },
                    "invoice_text": {
                      "type": "string",
                      "example": "Some text"
                    },
                    "invoice_locked": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_externalReferenceNumber": {
                      "type": "string",
                      "example": "REF-1234"
                    },
                    "invoice_internalInvoiceReferenceNumber": {
                      "type": "string",
                      "example": 1233
                    },
                    "invoice_dueDate": {
                      "type": "string",
                      "example": "2019-01-05"
                    },
                    "invoice_deliveryDate": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "invoice_paid": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_paidDate": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "invoice_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_formatVersion": {
                      "type": "integer",
                      "example": 2
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 1023
                    },
                    "table_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "tableArea_id": {
                      "type": "integer",
                      "example": 67
                    },
                    "paymentMethod_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "printer_id": {
                      "type": "integer",
                      "example": 23
                    },
                    "billType_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "currency_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "item_id": {
                            "type": "integer",
                            "example": 76234
                          },
                          "item_timestamp": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "item_quantity": {
                            "type": "string",
                            "example": 1
                          },
                          "item_retour": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_number": {
                            "type": "string",
                            "example": 1
                          },
                          "item_serialNumber": {
                            "type": "string",
                            "example": "some-serial-number"
                          },
                          "item_expirationDate": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "item_name": {
                            "type": "string",
                            "example": "MyProductName"
                          },
                          "item_comment": {
                            "type": "string",
                            "example": "my-optional-comment"
                          },
                          "item_price": {
                            "type": "string",
                            "example": 12
                          },
                          "item_priceNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_priceBase": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_total": {
                            "type": "string",
                            "example": 12
                          },
                          "item_totalNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_vat": {
                            "type": "string",
                            "example": 2
                          },
                          "item_vatRate": {
                            "type": "string",
                            "example": 20
                          },
                          "item_vatCompensation": {
                            "type": "string",
                            "example": 0
                          },
                          "item_undiscountedSumBeforeLineDiscount": {
                            "type": "string",
                            "example": 0
                          },
                          "item_undiscountedSumBeforeInvoiceDiscount": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountId": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_lineDiscountGroupId": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_lineDiscountName": {
                            "type": "string",
                            "example": "SomeDiscountName"
                          },
                          "item_lineDiscountPercent": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountNet": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountGross": {
                            "type": "string",
                            "example": 0
                          },
                          "item_invoiceDiscountNet": {
                            "type": "string",
                            "example": 0
                          },
                          "item_invoiceDiscountGross": {
                            "type": "string",
                            "example": 0
                          },
                          "item_discountable": {
                            "type": "boolean",
                            "example": true
                          },
                          "paymentMethod_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_updatedStock": {
                            "type": "boolean",
                            "example": true
                          },
                          "product_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "productgroup_name": {
                            "type": "string",
                            "example": "My product group"
                          },
                          "productGroup_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "customer_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_name": {
                            "type": "string",
                            "example": "SomeUser"
                          },
                          "invoice_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "deliveryBill_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "dailyReport_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "productUnit_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "table_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "table_name": {
                            "type": "string",
                            "example": "SomeTableName"
                          },
                          "payment_id": {
                            "type": "integer",
                            "example": 431
                          },
                          "retourInvoice_id": {
                            "type": "integer",
                            "example": 1233
                          },
                          "item_accountingCode": {
                            "type": "string",
                            "example": 4000
                          },
                          "item_testMode": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_product_price": {
                            "type": "string",
                            "example": 12
                          },
                          "item_product_priceNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_product_vat": {
                            "type": "string",
                            "example": 2
                          },
                          "item_qty": {
                            "type": "string",
                            "example": 1
                          },
                          "item_product_vatRate": {
                            "type": "string",
                            "example": 20
                          },
                          "item_product_vatCompensation": {
                            "type": "string",
                            "example": 0
                          },
                          "item_product_priceNetPerUnit": {
                            "type": "string",
                            "example": 10
                          },
                          "item_product_pricePerUnit": {
                            "type": "string",
                            "example": 12
                          },
                          "item_product_discountable": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "address": {
                      "properties": {
                        "company": {
                          "type": "string",
                          "example": "ready2order GmbH"
                        },
                        "vatId": {
                          "type": "string",
                          "example": "ATU12341234"
                        },
                        "salutation": {
                          "type": "string",
                          "example": "Mr/Ms"
                        },
                        "title": {
                          "type": "string",
                          "example": "Professor"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Chris"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Muster"
                        },
                        "street": {
                          "type": "string",
                          "example": "SomeStreet 1234"
                        },
                        "city": {
                          "type": "string",
                          "example": "Vienna"
                        },
                        "zip": {
                          "type": "string",
                          "example": 1030
                        },
                        "country": {
                          "type": "string",
                          "example": "AT"
                        },
                        "email": {
                          "type": "string",
                          "example": "dummy@email.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "+43 1234 12312341234"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "properties": {
                        "billType_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "billType_name": {
                          "type": "string",
                          "example": "Rechnung"
                        },
                        "billType_symbol": {
                          "type": "string",
                          "example": "RG"
                        }
                      },
                      "type": "object"
                    },
                    "payment": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "billPayment_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billPayment_name": {
                            "type": "string",
                            "example": "Cash"
                          },
                          "billPayment_value": {
                            "type": "string",
                            "example": 12
                          },
                          "payment_id": {
                            "type": "integer",
                            "example": 431
                          },
                          "referenced_bill_id": {
                            "type": "integer",
                            "example": 1234
                          }
                        }
                      }
                    },
                    "transaction": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "TFRG4C6NG2"
                        },
                        "r2o_id": {
                          "type": "string",
                          "example": "U1JGILYS"
                        }
                      },
                      "type": "object"
                    },
                    "discounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "billDiscount_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_name": {
                            "type": "string",
                            "example": "SomeDiscountName"
                          },
                          "billDiscount_value": {
                            "type": "string",
                            "example": 0
                          },
                          "billDiscount_percent": {
                            "type": "string",
                            "example": 0
                          },
                          "billDiscount_discount_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_discountGroup_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_created_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "billDiscount_updated_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/document/invoice/count": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Count All Bills",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "count": {
                      "type": "integer",
                      "example": 1500
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/document/invoice/{id}": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Find Bill by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bill ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invoice_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "invoice_reference_id": {
                      "type": "integer",
                      "example": 1233
                    },
                    "invoice_timestamp": {
                      "type": "string",
                      "example": "2019-01-01 00:00:00"
                    },
                    "invoice_number": {
                      "type": "integer",
                      "example": 1
                    },
                    "invoice_numberFull": {
                      "type": "string",
                      "example": "RG2019/1"
                    },
                    "invoice_total": {
                      "type": "string",
                      "example": 12
                    },
                    "invoice_totalNet": {
                      "type": "string",
                      "example": 10
                    },
                    "invoice_totalVat": {
                      "type": "string",
                      "example": 2
                    },
                    "invoice_totalTip": {
                      "type": "string",
                      "example": 0
                    },
                    "invoice_address_company": {
                      "type": "string",
                      "example": "ready2order GmbH"
                    },
                    "invoice_address_vatId": {
                      "type": "string",
                      "example": "ATU12341234"
                    },
                    "invoice_address_salutation": {
                      "type": "string",
                      "example": "Mr/Ms"
                    },
                    "invoice_address_title": {
                      "type": "string",
                      "example": "Professor"
                    },
                    "invoice_address_firstName": {
                      "type": "string",
                      "example": "Chris"
                    },
                    "invoice_address_lastName": {
                      "type": "string",
                      "example": "Fox"
                    },
                    "invoice_address_street": {
                      "type": "string",
                      "example": "Hintere ZollamtsstraÃŸe 17"
                    },
                    "invoice_address_city": {
                      "type": "string",
                      "example": "Vienna"
                    },
                    "invoice_address_zip": {
                      "type": "string",
                      "example": 1030
                    },
                    "invoice_address_country": {
                      "type": "string",
                      "example": "AT"
                    },
                    "invoice_address_email": {
                      "type": "string",
                      "example": "dux@fox.com"
                    },
                    "invoice_address_phone": {
                      "type": "string",
                      "example": "+43 664 1234 1234 1234"
                    },
                    "invoice_inPrinterQueue": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_priceBase": {
                      "type": "string",
                      "example": "brutto"
                    },
                    "invoice_deleted_at": {
                      "type": "string",
                      "example": "2019-01-01 00:00:00"
                    },
                    "invoice_deletedReason": {
                      "type": "string",
                      "example": "Some reason"
                    },
                    "invoice_pdf": {
                      "type": "string",
                      "example": "http://some.link"
                    },
                    "invoice_textBeforeItemsTable": {
                      "type": "string",
                      "example": "Some text"
                    },
                    "invoice_text": {
                      "type": "string",
                      "example": "Some text"
                    },
                    "invoice_locked": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_externalReferenceNumber": {
                      "type": "string",
                      "example": "REF-1234"
                    },
                    "invoice_internalInvoiceReferenceNumber": {
                      "type": "string",
                      "example": 1233
                    },
                    "invoice_dueDate": {
                      "type": "string",
                      "example": "2019-01-05"
                    },
                    "invoice_deliveryDate": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "invoice_paid": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_paidDate": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "invoice_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_formatVersion": {
                      "type": "integer",
                      "example": 2
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 1023
                    },
                    "table_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "tableArea_id": {
                      "type": "integer",
                      "example": 67
                    },
                    "paymentMethod_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "printer_id": {
                      "type": "integer",
                      "example": 23
                    },
                    "billType_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "currency_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "item_id": {
                            "type": "integer",
                            "example": 76234
                          },
                          "item_timestamp": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "item_quantity": {
                            "type": "string",
                            "example": 1
                          },
                          "item_retour": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_number": {
                            "type": "string",
                            "example": 1
                          },
                          "item_serialNumber": {
                            "type": "string",
                            "example": "some-serial-number"
                          },
                          "item_expirationDate": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "item_name": {
                            "type": "string",
                            "example": "MyProductName"
                          },
                          "item_comment": {
                            "type": "string",
                            "example": "my-optional-comment"
                          },
                          "item_price": {
                            "type": "string",
                            "example": 12
                          },
                          "item_priceNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_priceBase": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_total": {
                            "type": "string",
                            "example": 12
                          },
                          "item_totalNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_vat": {
                            "type": "string",
                            "example": 2
                          },
                          "item_vatRate": {
                            "type": "string",
                            "example": 20
                          },
                          "item_vatCompensation": {
                            "type": "string",
                            "example": 0
                          },
                          "item_undiscountedSumBeforeLineDiscount": {
                            "type": "string",
                            "example": 0
                          },
                          "item_undiscountedSumBeforeInvoiceDiscount": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountId": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_lineDiscountGroupId": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_lineDiscountName": {
                            "type": "string",
                            "example": "SomeDiscountName"
                          },
                          "item_lineDiscountPercent": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountNet": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountGross": {
                            "type": "string",
                            "example": 0
                          },
                          "item_invoiceDiscountNet": {
                            "type": "string",
                            "example": 0
                          },
                          "item_invoiceDiscountGross": {
                            "type": "string",
                            "example": 0
                          },
                          "item_discountable": {
                            "type": "boolean",
                            "example": true
                          },
                          "paymentMethod_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_updatedStock": {
                            "type": "boolean",
                            "example": true
                          },
                          "product_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "productgroup_name": {
                            "type": "string",
                            "example": "My product group"
                          },
                          "productGroup_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "customer_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_name": {
                            "type": "string",
                            "example": "SomeUser"
                          },
                          "invoice_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "deliveryBill_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "dailyReport_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "productUnit_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "table_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "table_name": {
                            "type": "string",
                            "example": "SomeTableName"
                          },
                          "payment_id": {
                            "type": "integer",
                            "example": 431
                          },
                          "retourInvoice_id": {
                            "type": "integer",
                            "example": 1233
                          },
                          "item_accountingCode": {
                            "type": "string",
                            "example": 4000
                          },
                          "item_testMode": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_product_price": {
                            "type": "string",
                            "example": 12
                          },
                          "item_product_priceNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_product_vat": {
                            "type": "string",
                            "example": 2
                          },
                          "item_qty": {
                            "type": "string",
                            "example": 1
                          },
                          "item_product_vatRate": {
                            "type": "string",
                            "example": 20
                          },
                          "item_product_vatCompensation": {
                            "type": "string",
                            "example": 0
                          },
                          "item_product_priceNetPerUnit": {
                            "type": "string",
                            "example": 10
                          },
                          "item_product_pricePerUnit": {
                            "type": "string",
                            "example": 12
                          },
                          "item_product_discountable": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "address": {
                      "properties": {
                        "company": {
                          "type": "string",
                          "example": "ready2order GmbH"
                        },
                        "vatId": {
                          "type": "string",
                          "example": "ATU12341234"
                        },
                        "salutation": {
                          "type": "string",
                          "example": "Mr/Ms"
                        },
                        "title": {
                          "type": "string",
                          "example": "Professor"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Chris"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Muster"
                        },
                        "street": {
                          "type": "string",
                          "example": "SomeStreet 1234"
                        },
                        "city": {
                          "type": "string",
                          "example": "Vienna"
                        },
                        "zip": {
                          "type": "string",
                          "example": 1030
                        },
                        "country": {
                          "type": "string",
                          "example": "AT"
                        },
                        "email": {
                          "type": "string",
                          "example": "dummy@email.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "+43 1234 12312341234"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "properties": {
                        "billType_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "billType_name": {
                          "type": "string",
                          "example": "Rechnung"
                        },
                        "billType_symbol": {
                          "type": "string",
                          "example": "RG"
                        }
                      },
                      "type": "object"
                    },
                    "payment": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "billPayment_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billPayment_name": {
                            "type": "string",
                            "example": "Cash"
                          },
                          "billPayment_value": {
                            "type": "string",
                            "example": 12
                          },
                          "payment_id": {
                            "type": "integer",
                            "example": 431
                          },
                          "referenced_bill_id": {
                            "type": "integer",
                            "example": 1234
                          }
                        }
                      }
                    },
                    "transaction": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "TFRG4C6NG2"
                        },
                        "r2o_id": {
                          "type": "string",
                          "example": "U1JGILYS"
                        }
                      },
                      "type": "object"
                    },
                    "discounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "billDiscount_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_name": {
                            "type": "string",
                            "example": "SomeDiscountName"
                          },
                          "billDiscount_value": {
                            "type": "string",
                            "example": 0
                          },
                          "billDiscount_percent": {
                            "type": "string",
                            "example": 0
                          },
                          "billDiscount_discount_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_discountGroup_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_created_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "billDiscount_updated_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/document/invoice/{id}/delete": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Delete Bill by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bill ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "storno_id": {
                    "description": "Storno ID",
                    "type": "integer",
                    "example": 9823
                  },
                  "storno_reason": {
                    "description": "Some reason why bill was deleted",
                    "type": "string",
                    "example": "Correction"
                  },
                  "invoice_externalReferenceNumber": {
                    "description": "Some external reference number for that bill",
                    "type": "string",
                    "example": "REF-1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invoice_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "invoice_reference_id": {
                      "type": "integer",
                      "example": 1233
                    },
                    "invoice_timestamp": {
                      "type": "string",
                      "example": "2019-01-01 00:00:00"
                    },
                    "invoice_number": {
                      "type": "integer",
                      "example": 1
                    },
                    "invoice_numberFull": {
                      "type": "string",
                      "example": "RG2019/1"
                    },
                    "invoice_total": {
                      "type": "string",
                      "example": 12
                    },
                    "invoice_totalNet": {
                      "type": "string",
                      "example": 10
                    },
                    "invoice_totalVat": {
                      "type": "string",
                      "example": 2
                    },
                    "invoice_totalTip": {
                      "type": "string",
                      "example": 0
                    },
                    "invoice_address_company": {
                      "type": "string",
                      "example": "ready2order GmbH"
                    },
                    "invoice_address_vatId": {
                      "type": "string",
                      "example": "ATU12341234"
                    },
                    "invoice_address_salutation": {
                      "type": "string",
                      "example": "Mr/Ms"
                    },
                    "invoice_address_title": {
                      "type": "string",
                      "example": "Professor"
                    },
                    "invoice_address_firstName": {
                      "type": "string",
                      "example": "Chris"
                    },
                    "invoice_address_lastName": {
                      "type": "string",
                      "example": "Fox"
                    },
                    "invoice_address_street": {
                      "type": "string",
                      "example": "Hintere ZollamtsstraÃŸe 17"
                    },
                    "invoice_address_city": {
                      "type": "string",
                      "example": "Vienna"
                    },
                    "invoice_address_zip": {
                      "type": "string",
                      "example": 1030
                    },
                    "invoice_address_country": {
                      "type": "string",
                      "example": "AT"
                    },
                    "invoice_address_email": {
                      "type": "string",
                      "example": "dux@fox.com"
                    },
                    "invoice_address_phone": {
                      "type": "string",
                      "example": "+43 664 1234 1234 1234"
                    },
                    "invoice_inPrinterQueue": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_priceBase": {
                      "type": "string",
                      "example": "brutto"
                    },
                    "invoice_deleted_at": {
                      "type": "string",
                      "example": "2019-01-01 00:00:00"
                    },
                    "invoice_deletedReason": {
                      "type": "string",
                      "example": "Some reason"
                    },
                    "invoice_pdf": {
                      "type": "string",
                      "example": "http://some.link"
                    },
                    "invoice_textBeforeItemsTable": {
                      "type": "string",
                      "example": "Some text"
                    },
                    "invoice_text": {
                      "type": "string",
                      "example": "Some text"
                    },
                    "invoice_locked": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_externalReferenceNumber": {
                      "type": "string",
                      "example": "REF-1234"
                    },
                    "invoice_internalInvoiceReferenceNumber": {
                      "type": "string",
                      "example": 1233
                    },
                    "invoice_dueDate": {
                      "type": "string",
                      "example": "2019-01-05"
                    },
                    "invoice_deliveryDate": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "invoice_paid": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_paidDate": {
                      "type": "string",
                      "example": "2019-01-01"
                    },
                    "invoice_testMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "invoice_formatVersion": {
                      "type": "integer",
                      "example": 2
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 1023
                    },
                    "table_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "tableArea_id": {
                      "type": "integer",
                      "example": 67
                    },
                    "paymentMethod_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "printer_id": {
                      "type": "integer",
                      "example": 23
                    },
                    "billType_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "currency_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "item_id": {
                            "type": "integer",
                            "example": 76234
                          },
                          "item_timestamp": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "item_quantity": {
                            "type": "string",
                            "example": 1
                          },
                          "item_retour": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_number": {
                            "type": "string",
                            "example": 1
                          },
                          "item_serialNumber": {
                            "type": "string",
                            "example": "some-serial-number"
                          },
                          "item_expirationDate": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "item_name": {
                            "type": "string",
                            "example": "MyProductName"
                          },
                          "item_comment": {
                            "type": "string",
                            "example": "my-optional-comment"
                          },
                          "item_price": {
                            "type": "string",
                            "example": 12
                          },
                          "item_priceNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_priceBase": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_total": {
                            "type": "string",
                            "example": 12
                          },
                          "item_totalNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_vat": {
                            "type": "string",
                            "example": 2
                          },
                          "item_vatRate": {
                            "type": "string",
                            "example": 20
                          },
                          "item_vatCompensation": {
                            "type": "string",
                            "example": 0
                          },
                          "item_undiscountedSumBeforeLineDiscount": {
                            "type": "string",
                            "example": 0
                          },
                          "item_undiscountedSumBeforeInvoiceDiscount": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountId": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_lineDiscountGroupId": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_lineDiscountName": {
                            "type": "string",
                            "example": "SomeDiscountName"
                          },
                          "item_lineDiscountPercent": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountNet": {
                            "type": "string",
                            "example": 0
                          },
                          "item_lineDiscountGross": {
                            "type": "string",
                            "example": 0
                          },
                          "item_invoiceDiscountNet": {
                            "type": "string",
                            "example": 0
                          },
                          "item_invoiceDiscountGross": {
                            "type": "string",
                            "example": 0
                          },
                          "item_discountable": {
                            "type": "boolean",
                            "example": true
                          },
                          "paymentMethod_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "item_updatedStock": {
                            "type": "boolean",
                            "example": true
                          },
                          "product_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "productgroup_name": {
                            "type": "string",
                            "example": "My product group"
                          },
                          "productGroup_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "customer_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "user_name": {
                            "type": "string",
                            "example": "SomeUser"
                          },
                          "invoice_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "deliveryBill_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "dailyReport_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "productUnit_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "table_id": {
                            "type": "integer",
                            "example": 1234
                          },
                          "table_name": {
                            "type": "string",
                            "example": "SomeTableName"
                          },
                          "payment_id": {
                            "type": "integer",
                            "example": 431
                          },
                          "retourInvoice_id": {
                            "type": "integer",
                            "example": 1233
                          },
                          "item_accountingCode": {
                            "type": "string",
                            "example": 4000
                          },
                          "item_testMode": {
                            "type": "boolean",
                            "example": false
                          },
                          "item_product_price": {
                            "type": "string",
                            "example": 12
                          },
                          "item_product_priceNet": {
                            "type": "string",
                            "example": 10
                          },
                          "item_product_vat": {
                            "type": "string",
                            "example": 2
                          },
                          "item_qty": {
                            "type": "string",
                            "example": 1
                          },
                          "item_product_vatRate": {
                            "type": "string",
                            "example": 20
                          },
                          "item_product_vatCompensation": {
                            "type": "string",
                            "example": 0
                          },
                          "item_product_priceNetPerUnit": {
                            "type": "string",
                            "example": 10
                          },
                          "item_product_pricePerUnit": {
                            "type": "string",
                            "example": 12
                          },
                          "item_product_discountable": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "address": {
                      "properties": {
                        "company": {
                          "type": "string",
                          "example": "ready2order GmbH"
                        },
                        "vatId": {
                          "type": "string",
                          "example": "ATU12341234"
                        },
                        "salutation": {
                          "type": "string",
                          "example": "Mr/Ms"
                        },
                        "title": {
                          "type": "string",
                          "example": "Professor"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Chris"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Muster"
                        },
                        "street": {
                          "type": "string",
                          "example": "SomeStreet 1234"
                        },
                        "city": {
                          "type": "string",
                          "example": "Vienna"
                        },
                        "zip": {
                          "type": "string",
                          "example": 1030
                        },
                        "country": {
                          "type": "string",
                          "example": "AT"
                        },
                        "email": {
                          "type": "string",
                          "example": "dummy@email.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "+43 1234 12312341234"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "properties": {
                        "billType_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "billType_name": {
                          "type": "string",
                          "example": "Rechnung"
                        },
                        "billType_symbol": {
                          "type": "string",
                          "example": "RG"
                        }
                      },
                      "type": "object"
                    },
                    "payment": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "billPayment_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billPayment_name": {
                            "type": "string",
                            "example": "Cash"
                          },
                          "billPayment_value": {
                            "type": "string",
                            "example": 12
                          },
                          "payment_id": {
                            "type": "integer",
                            "example": 431
                          },
                          "referenced_bill_id": {
                            "type": "integer",
                            "example": 1234
                          }
                        }
                      }
                    },
                    "transaction": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "TFRG4C6NG2"
                        },
                        "r2o_id": {
                          "type": "string",
                          "example": "U1JGILYS"
                        }
                      },
                      "type": "object"
                    },
                    "discounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "billDiscount_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_name": {
                            "type": "string",
                            "example": "SomeDiscountName"
                          },
                          "billDiscount_value": {
                            "type": "string",
                            "example": 0
                          },
                          "billDiscount_percent": {
                            "type": "string",
                            "example": 0
                          },
                          "billDiscount_discount_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_discountGroup_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "billDiscount_created_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          },
                          "billDiscount_updated_at": {
                            "type": "string",
                            "example": "2019-01-01 00:00:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/document/invoice/{id}/print": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Print a bill",
        "description": "Add bill to printer queue for specific printer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bill ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "printer_id": {
                    "description": "Printer ID where to print the bill",
                    "type": "integer",
                    "example": 2394
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Bill was added to printer queue"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/document/invoice/{id}/pdf": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Create PDF for bill",
        "description": "Returns signed S3 URL. Optionally regenerates pdf if `regeneratePDF` is set to `true`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "regeneratePDF": {
                    "description": "Optionally regenerate an existing PDF",
                    "type": "boolean",
                    "example": true
                  },
                  "format": {
                    "description": "PDF Format",
                    "type": "string",
                    "example": "A4, 80mm or 58mm"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "uri": {
                      "type": "string",
                      "example": "https://some.link"
                    },
                    "format": {
                      "type": "string",
                      "example": "A4"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/job_status/{id}": {
      "get": {
        "tags": [
          "JobStatus"
        ],
        "summary": "Get Status By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobStatus_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "jobStatus_status": {
                      "type": "string",
                      "example": "finished"
                    },
                    "jobStatus_startedAt": {
                      "type": "string",
                      "example": "2019-08-02 08:08:13"
                    },
                    "jobStatus_finishedAt": {
                      "type": "string",
                      "example": "2019-08-02 08:08:14"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "List all Languages",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "language_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "language_name": {
                        "type": "string",
                        "example": "label_en"
                      },
                      "language_code": {
                        "type": "string",
                        "example": "en"
                      },
                      "language_locale": {
                        "type": "string",
                        "example": "en_US"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/languages/{id}": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Find Language by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Language ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "language_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "language_name": {
                      "type": "string",
                      "example": "label_en"
                    },
                    "language_code": {
                      "type": "string",
                      "example": "en"
                    },
                    "language_locale": {
                      "type": "string",
                      "example": "en_US"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/legalForms": {
      "get": {
        "tags": [
          "LegalForm"
        ],
        "summary": "List all Legal Forms",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "legalForm_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "legalForm_name": {
                        "type": "string",
                        "example": "GmbH"
                      },
                      "legalForm_identifier": {
                        "type": "string",
                        "example": "gmbh"
                      },
                      "legalForm_country_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/legalForms/{id}": {
      "get": {
        "tags": [
          "LegalForm"
        ],
        "summary": "Find Legal Form by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Legal Form ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "legalForm_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "legalForm_name": {
                      "type": "string",
                      "example": "GmbH"
                    },
                    "legalForm_identifier": {
                      "type": "string",
                      "example": "gmbh"
                    },
                    "legalForm_country_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "List all Orders",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "allowed values: table_id or product_id or both",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainingsMode",
            "in": "query",
            "description": "retrieve results for trainingsMode or liveMde",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table_id",
            "in": "query",
            "description": "table id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "product id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "order_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "order_quantity": {
                      "type": "string",
                      "example": 123
                    },
                    "order_priceGross": {
                      "type": "string",
                      "example": 123.12
                    },
                    "order_priceNet": {
                      "type": "string",
                      "example": 123.12
                    },
                    "order_vat": {
                      "type": "string",
                      "example": 10
                    },
                    "order_discount_valueGross": {
                      "type": "string",
                      "example": 10
                    },
                    "order_discount_valueNet": {
                      "type": "string",
                      "example": 10
                    },
                    "order_vatRate": {
                      "type": "string",
                      "example": 10
                    },
                    "order_product_priceGrossPerUnit": {
                      "type": "string",
                      "example": 123
                    },
                    "order_product_priceNetPerUnit": {
                      "type": "string",
                      "example": 123
                    },
                    "order_discount_name": {
                      "type": "string",
                      "example": "discountA"
                    },
                    "order_discountable": {
                      "type": "boolean",
                      "example": true
                    },
                    "order_mergeable": {
                      "type": "boolean",
                      "example": true
                    },
                    "order_retour": {
                      "type": "boolean",
                      "example": false
                    },
                    "order_number": {
                      "type": "integer",
                      "example": 123
                    },
                    "order_group": {
                      "type": "integer",
                      "example": 123
                    },
                    "order_product_name": {
                      "type": "string",
                      "example": "productA"
                    },
                    "order_product_itemnumber": {
                      "type": "string",
                      "example": 123
                    },
                    "order_product_serialnumber": {
                      "type": "string",
                      "example": 1231234
                    },
                    "order_course": {
                      "type": "integer",
                      "example": 1
                    },
                    "order_status": {
                      "type": "integer",
                      "example": 1
                    },
                    "order_comment": {
                      "type": "string",
                      "example": "very long text"
                    },
                    "table_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "productgroup_type_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "order_created_at": {
                      "type": "string",
                      "example": "2019-01-01"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create a new Order",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "table_id": {
                    "description": "Table on which the orders are booked",
                    "type": "integer",
                    "example": 1234
                  },
                  "price_base": {
                    "description": "'gross' or 'net'",
                    "type": "string",
                    "enum": [
                      "0",
                      "1",
                      "brutto",
                      "netto",
                      "gross",
                      "net"
                    ],
                    "example": "gross"
                  },
                  "training_mode": {
                    "description": "Whether to place the order in training- or normal-mode",
                    "type": "boolean",
                    "example": false
                  },
                  "items": {
                    "description": "List of items",
                    "type": "array",
                    "items": {
                      "properties": {
                        "item_quantity": {
                          "description": "Quantity",
                          "type": "string",
                          "example": 3
                        },
                        "item_price": {
                          "description": "Price of product",
                          "type": "string",
                          "example": 25.75
                        },
                        "item_vatRate": {
                          "description": "VAT-rate of product",
                          "type": "string",
                          "example": 20
                        },
                        "item_vatId": {
                          "type": "integer",
                          "example": "no-example"
                        },
                        "item_course": {
                          "description": "Menu course",
                          "type": "integer",
                          "example": 1
                        },
                        "item_orderGroup": {
                          "description": "Order group on the table to book on. Use this if multiple parties are sharing the same table.",
                          "type": "integer",
                          "example": 1
                        },
                        "item_discountable": {
                          "description": "Whether the product should be applicable to apply discounts on it",
                          "type": "boolean",
                          "example": true
                        },
                        "item_mergeable": {
                          "description": "Whether the product should be merged into one line on the final invoice.",
                          "type": "boolean",
                          "example": true
                        },
                        "product_id": {
                          "description": "Id of product",
                          "type": "integer",
                          "example": 4321
                        },
                        "item_name": {
                          "description": "Name of product (if different)",
                          "type": "string",
                          "example": "Some custom product name"
                        },
                        "item_comment": {
                          "description": "Custom comment",
                          "type": "string",
                          "example": "An optional comment"
                        },
                        "item_variations": {
                          "description": "List of product variations",
                          "type": "array",
                          "items": {
                            "properties": {
                              "product_id": {
                                "description": "Id of product variation",
                                "type": "integer",
                                "example": 1
                              },
                              "variation_name": {
                                "description": "Product variation name",
                                "type": "string",
                                "example": "Schnitzel with chips and mayo"
                              },
                              "variation_price": {
                                "description": "Product variation price",
                                "type": "string",
                                "example": 15.2
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": []
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "order_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "order_quantity": {
                      "type": "string",
                      "example": 123
                    },
                    "order_priceGross": {
                      "type": "string",
                      "example": 123.12
                    },
                    "order_priceNet": {
                      "type": "string",
                      "example": 123.12
                    },
                    "order_vat": {
                      "type": "string",
                      "example": 10
                    },
                    "order_discount_valueGross": {
                      "type": "string",
                      "example": 10
                    },
                    "order_discount_valueNet": {
                      "type": "string",
                      "example": 10
                    },
                    "order_vatRate": {
                      "type": "string",
                      "example": 10
                    },
                    "order_product_priceGrossPerUnit": {
                      "type": "string",
                      "example": 123
                    },
                    "order_product_priceNetPerUnit": {
                      "type": "string",
                      "example": 123
                    },
                    "order_discount_name": {
                      "type": "string",
                      "example": "discountA"
                    },
                    "order_discountable": {
                      "type": "boolean",
                      "example": true
                    },
                    "order_mergeable": {
                      "type": "boolean",
                      "example": true
                    },
                    "order_retour": {
                      "type": "boolean",
                      "example": false
                    },
                    "order_number": {
                      "type": "integer",
                      "example": 123
                    },
                    "order_group": {
                      "type": "integer",
                      "example": 123
                    },
                    "order_product_name": {
                      "type": "string",
                      "example": "productA"
                    },
                    "order_product_itemnumber": {
                      "type": "string",
                      "example": 123
                    },
                    "order_product_serialnumber": {
                      "type": "string",
                      "example": 1231234
                    },
                    "order_course": {
                      "type": "integer",
                      "example": 1
                    },
                    "order_status": {
                      "type": "integer",
                      "example": 1
                    },
                    "order_comment": {
                      "type": "string",
                      "example": "very long text"
                    },
                    "table_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "productgroup_type_id": {
                      "type": "integer",
                      "example": 123456
                    },
                    "order_created_at": {
                      "type": "string",
                      "example": "2019-01-01"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/paymentMethods": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "List all Payment Methods",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "payment_id": {
                        "type": "integer",
                        "example": 74890
                      },
                      "payment_name": {
                        "type": "string",
                        "example": "Barzahlung"
                      },
                      "payment_description": {
                        "type": "string",
                        "example": "just a description"
                      },
                      "payment_accountingCode": {
                        "type": "string",
                        "example": 2700
                      },
                      "payment_markAsPaid": {
                        "type": "boolean",
                        "example": true
                      },
                      "paymentType_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Create Payment Method",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload7"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "payment_id": {
                      "type": "integer",
                      "example": 74890
                    },
                    "payment_name": {
                      "type": "string",
                      "example": "Barzahlung"
                    },
                    "payment_description": {
                      "type": "string",
                      "example": "just a description"
                    },
                    "payment_accountingCode": {
                      "type": "string",
                      "example": 2700
                    },
                    "payment_markAsPaid": {
                      "type": "boolean",
                      "example": true
                    },
                    "paymentType_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/paymentMethods/{id}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Find Payment Method by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "payment_id": {
                      "type": "integer",
                      "example": 74890
                    },
                    "payment_name": {
                      "type": "string",
                      "example": "Barzahlung"
                    },
                    "payment_description": {
                      "type": "string",
                      "example": "just a description"
                    },
                    "payment_accountingCode": {
                      "type": "string",
                      "example": 2700
                    },
                    "payment_markAsPaid": {
                      "type": "boolean",
                      "example": true
                    },
                    "paymentType_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Update Payment Method",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload7"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "payment_id": {
                      "type": "integer",
                      "example": 74890
                    },
                    "payment_name": {
                      "type": "string",
                      "example": "Barzahlung"
                    },
                    "payment_description": {
                      "type": "string",
                      "example": "just a description"
                    },
                    "payment_accountingCode": {
                      "type": "string",
                      "example": 2700
                    },
                    "payment_markAsPaid": {
                      "type": "boolean",
                      "example": true
                    },
                    "paymentType_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Delete Payment Method",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "PaymentMethod was successfully deleted."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/paymentMethodsType": {
      "get": {
        "tags": [
          "PaymentMethodType"
        ],
        "summary": "List all Payment Method Types",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "paymentType_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "paymentType_identifier": {
                        "type": "string",
                        "example": "cash"
                      },
                      "paymentType_name": {
                        "type": "string",
                        "example": "Bargeld"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/paymentMethodsType/{id}": {
      "get": {
        "tags": [
          "PaymentMethodType"
        ],
        "summary": "Find Payment Method Type by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paymentType_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paymentType_identifier": {
                      "type": "string",
                      "example": "cash"
                    },
                    "paymentType_name": {
                      "type": "string",
                      "example": "Bargeld"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/print": {
      "get": {
        "tags": [
          "PrintJob"
        ],
        "summary": "Get Not Printed",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "printJob_id": {
                        "type": "integer",
                        "example": 9999
                      },
                      "printer_id": {
                        "type": "integer",
                        "example": 9999
                      },
                      "printJob_imageURL": {
                        "type": "string"
                      },
                      "printJob_printLogo": {
                        "type": "boolean",
                        "example": false
                      },
                      "printJob_createdAt": {
                        "type": "string"
                      },
                      "printJob_printedAt": {
                        "type": "string"
                      },
                      "printJob_content": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "PrintJob"
        ],
        "summary": "Create a new Print Job",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "printJob_content": {
                    "type": "string",
                    "example": "no-example"
                  },
                  "printJob_imageURL": {
                    "type": "string",
                    "example": "no-example"
                  },
                  "printJob_printLogo": {
                    "type": "boolean",
                    "example": false
                  },
                  "printer_id": {
                    "type": "integer",
                    "example": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "printJob_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "printer_id": {
                      "type": "integer",
                      "example": 9999
                    },
                    "printJob_imageURL": {
                      "type": "string"
                    },
                    "printJob_printLogo": {
                      "type": "boolean",
                      "example": false
                    },
                    "printJob_createdAt": {
                      "type": "string"
                    },
                    "printJob_printedAt": {
                      "type": "string"
                    },
                    "printJob_content": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/print/{id}": {
      "delete": {
        "tags": [
          "PrintJob"
        ],
        "summary": "Delete Print Job by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Customer was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/printer": {
      "get": {
        "tags": [
          "Printer"
        ],
        "summary": "List all Printers",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "printer_id": {
                        "type": "integer",
                        "example": 123
                      },
                      "printer_name": {
                        "type": "string",
                        "example": "kitchen printer"
                      },
                      "printer_description": {
                        "type": "string",
                        "example": "kitchen printer"
                      },
                      "printer_deviceName": {
                        "type": "string",
                        "example": "EPSON-TM-T88V"
                      },
                      "printer_model": {
                        "type": "string",
                        "example": "TM-T20II"
                      },
                      "printer_manufacturer": {
                        "type": "string",
                        "example": "EPSON"
                      },
                      "printer_ipAddress": {
                        "type": "string",
                        "example": "192.168.0.1"
                      },
                      "printer_characters": {
                        "type": "integer",
                        "example": 42
                      },
                      "printer_doubleHeight": {
                        "type": "boolean",
                        "example": true
                      },
                      "printer_createdAt": {
                        "type": "string",
                        "example": "2019-01-01 11:11:11"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/printer/{id}": {
      "get": {
        "tags": [
          "Printer"
        ],
        "summary": "Find Printer by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Printer ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "printer_id": {
                      "type": "integer",
                      "example": 123
                    },
                    "printer_name": {
                      "type": "string",
                      "example": "kitchen printer"
                    },
                    "printer_description": {
                      "type": "string",
                      "example": "kitchen printer"
                    },
                    "printer_deviceName": {
                      "type": "string",
                      "example": "EPSON-TM-T88V"
                    },
                    "printer_model": {
                      "type": "string",
                      "example": "TM-T20II"
                    },
                    "printer_manufacturer": {
                      "type": "string",
                      "example": "EPSON"
                    },
                    "printer_ipAddress": {
                      "type": "string",
                      "example": "192.168.0.1"
                    },
                    "printer_characters": {
                      "type": "integer",
                      "example": 42
                    },
                    "printer_doubleHeight": {
                      "type": "boolean",
                      "example": true
                    },
                    "printer_createdAt": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/printer/testPrint": {
      "post": {
        "tags": [
          "Printer"
        ],
        "summary": "Test Print",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Printer not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/printingProfile": {
      "get": {
        "tags": [
          "Printer Profile"
        ],
        "summary": "List all Printer Profiles",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "printingProfile_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "printingProfile_name": {
                        "type": "string",
                        "example": "Kitchen printer"
                      },
                      "printingProfile_associatedPhysicalPrinterIds": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "printingProfile_associatedPrinter_id": {
                              "type": "integer",
                              "example": 9999
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/productgroups": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "List all Product Groups",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "productgroup_id": {
                        "type": "integer",
                        "example": 83012
                      },
                      "productgroup_name": {
                        "type": "string",
                        "example": "Favorites"
                      },
                      "productgroup_description": {
                        "type": "string",
                        "example": "Just a description"
                      },
                      "productgroup_shortcut": {
                        "type": "string",
                        "example": "fav"
                      },
                      "productgroup_active": {
                        "type": "boolean",
                        "example": true
                      },
                      "productgroup_sortIndex": {
                        "type": "integer",
                        "example": -1
                      },
                      "productgroup_created_at": {
                        "type": "string",
                        "example": "2019-07-29 08:26:18"
                      },
                      "productgroup_updated_at": {
                        "type": "string",
                        "example": "2019-07-29 08:26:18"
                      },
                      "productgroup_type_id": {
                        "type": "integer",
                        "example": 2
                      },
                      "productgroup_parent": {
                        "type": "integer",
                        "example": 2
                      },
                      "productgroup_accountingCode": {
                        "type": "string",
                        "example": "1000123"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Create a new Product Group",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload8"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "productgroup_id": {
                      "type": "integer",
                      "example": 83012
                    },
                    "productgroup_name": {
                      "type": "string",
                      "example": "Favorites"
                    },
                    "productgroup_description": {
                      "type": "string",
                      "example": "Just a description"
                    },
                    "productgroup_shortcut": {
                      "type": "string",
                      "example": "fav"
                    },
                    "productgroup_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "productgroup_sortIndex": {
                      "type": "integer",
                      "example": -1
                    },
                    "productgroup_created_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_updated_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_type_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "productgroup_parent": {
                      "type": "integer",
                      "example": 2
                    },
                    "productgroup_accountingCode": {
                      "type": "string",
                      "example": "1000123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/productgroups/{id}": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Find Product Group by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "productgroup_id": {
                      "type": "integer",
                      "example": 83012
                    },
                    "productgroup_name": {
                      "type": "string",
                      "example": "Favorites"
                    },
                    "productgroup_description": {
                      "type": "string",
                      "example": "Just a description"
                    },
                    "productgroup_shortcut": {
                      "type": "string",
                      "example": "fav"
                    },
                    "productgroup_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "productgroup_sortIndex": {
                      "type": "integer",
                      "example": -1
                    },
                    "productgroup_created_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_updated_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_type_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "productgroup_parent": {
                      "type": "integer",
                      "example": 2
                    },
                    "productgroup_accountingCode": {
                      "type": "string",
                      "example": "1000123"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Update Product Group by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload8"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "productgroup_id": {
                      "type": "integer",
                      "example": 83012
                    },
                    "productgroup_name": {
                      "type": "string",
                      "example": "Favorites"
                    },
                    "productgroup_description": {
                      "type": "string",
                      "example": "Just a description"
                    },
                    "productgroup_shortcut": {
                      "type": "string",
                      "example": "fav"
                    },
                    "productgroup_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "productgroup_sortIndex": {
                      "type": "integer",
                      "example": -1
                    },
                    "productgroup_created_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_updated_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_type_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "productgroup_parent": {
                      "type": "integer",
                      "example": 2
                    },
                    "productgroup_accountingCode": {
                      "type": "string",
                      "example": "1000123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Delete Product Group by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Productgroup was deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/productgroups/{id}/products": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Find With Products By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "productgroup_id": {
                      "type": "integer",
                      "example": 83012
                    },
                    "productgroup_name": {
                      "type": "string",
                      "example": "Favorites"
                    },
                    "productgroup_description": {
                      "type": "string",
                      "example": "Just a description"
                    },
                    "productgroup_shortcut": {
                      "type": "string",
                      "example": "fav"
                    },
                    "productgroup_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "productgroup_sortIndex": {
                      "type": "integer",
                      "example": -1
                    },
                    "productgroup_created_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_updated_at": {
                      "type": "string",
                      "example": "2019-07-29 08:26:18"
                    },
                    "productgroup_type_id": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/units": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "List all Units",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "identifier": {
                      "type": "string",
                      "example": "kg|piece|hours|liter|..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List all Products",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "productgroup_id",
            "in": "query",
            "description": "get all products for this productgroup_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemNumber",
            "in": "query",
            "description": "search for a product with the given product_itemNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "search for a product with the given product_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "barcode",
            "in": "query",
            "description": "search for a product with the given product_barcode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "search for a product by keywords",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeProductGroup",
            "in": "query",
            "description": "include product group information",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProductVariations",
            "in": "query",
            "description": "include product variations information",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProductIngredients",
            "in": "query",
            "description": "include product variations information",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "product_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "product_externalReference": {
                        "type": "string",
                        "example": "ref-1234"
                      },
                      "product_itemnumber": {
                        "type": "string",
                        "example": 1
                      },
                      "product_barcode": {
                        "type": "string",
                        "example": "x400467508233"
                      },
                      "product_name": {
                        "type": "string",
                        "example": "coca cola"
                      },
                      "product_description": {
                        "type": "string",
                        "example": "coca cola - non-alcoholic drink"
                      },
                      "product_price": {
                        "type": "string",
                        "example": 10.5
                      },
                      "product_priceIncludesVat": {
                        "type": "boolean",
                        "example": false
                      },
                      "product_vat": {
                        "type": "string",
                        "example": 2
                      },
                      "product_vat_id": {
                        "type": "integer",
                        "example": 2
                      },
                      "product_customPrice": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_customQuantity": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_fav": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_highlight": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_expressMode": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_stock_enabled": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_ingredients_enabled": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_variations_enabled": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_stock_value": {
                        "type": "string",
                        "example": 100
                      },
                      "product_stock_unit": {
                        "type": "string",
                        "example": "kg"
                      },
                      "product_stock_reorderLevel": {
                        "type": "string",
                        "example": 10
                      },
                      "product_stock_safetyStock": {
                        "type": "string",
                        "example": 20
                      },
                      "product_sortIndex": {
                        "type": "integer",
                        "example": 5
                      },
                      "product_soldOut": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_sideDishOrder": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_discountable": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_accountingCode": {
                        "type": "string",
                        "example": 1000123
                      },
                      "product_colorClass": {
                        "type": "string",
                        "example": "bgGreenYellow"
                      },
                      "productgroup_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "product_type_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "product_type": {
                        "type": "string",
                        "example": "standard"
                      },
                      "product_created_at": {
                        "type": "string",
                        "example": "2019-01-01 11:11:11"
                      },
                      "product_updated_at": {
                        "type": "string",
                        "example": "2019-01-01 11:11:11"
                      },
                      "product_alternativeNameOnReceipts": {
                        "type": "string",
                        "example": "xxx cola"
                      },
                      "product_alternativeNameInPos": {
                        "type": "string",
                        "example": "yyy cola"
                      },
                      "productgroup": {
                        "properties": {
                          "productgroup_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "productgroup_name": {
                            "type": "string"
                          },
                          "productgroup_description": {
                            "type": "string"
                          },
                          "productgroup_shortcut": {
                            "type": "string"
                          },
                          "productgroup_active": {
                            "type": "boolean",
                            "example": false
                          },
                          "productgroup_sortIndex": {
                            "type": "integer",
                            "example": 9999
                          },
                          "productgroup_created_at": {
                            "type": "string"
                          },
                          "productgroup_updated_at": {
                            "type": "string"
                          },
                          "productgroup_type_id": {
                            "type": "integer",
                            "example": 9999
                          },
                          "productgroup_parent": {
                            "type": "integer",
                            "example": 2
                          },
                          "productgroup_accountingCode": {
                            "type": "string",
                            "example": "1000123"
                          }
                        },
                        "type": "object"
                      },
                      "productvariation": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "variation_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "variation_name": {
                              "type": "string",
                              "example": "schnitzel with chips and mayo"
                            },
                            "variation_price": {
                              "type": "string",
                              "example": 15.2
                            },
                            "variation_stock": {
                              "type": "string",
                              "example": 10
                            }
                          }
                        }
                      },
                      "productingredient": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "ingredient_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "ingredient_name": {
                              "type": "string",
                              "example": "pork meat"
                            },
                            "ingredient_unit": {
                              "type": "string",
                              "example": "Kg"
                            },
                            "ingredient_quantity": {
                              "type": "string",
                              "example": 0
                            }
                          }
                        }
                      },
                      "product_active": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_base_id": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new Product",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "productgroup_id": {
                    "description": "Product group id",
                    "type": "integer",
                    "example": 1
                  },
                  "product_name": {
                    "description": "Product name",
                    "type": "string",
                    "example": "Coca cola"
                  },
                  "product_price": {
                    "description": "Product price",
                    "type": "string",
                    "example": 124.25
                  },
                  "product_vat": {
                    "description": "VAT-Rate in decimals. Provide either product_vat or product_vat_id",
                    "type": "string",
                    "example": 10.5
                  },
                  "product_vat_id": {
                    "description": "ID of VAT-rate (see /vat-rates). Provide either product_vat or product_vat_id",
                    "type": "integer",
                    "example": 1234
                  },
                  "product_itemnumber": {
                    "description": "Item number",
                    "type": "string",
                    "example": "x-123"
                  },
                  "product_externalReference": {
                    "description": "External reference",
                    "type": "string",
                    "example": "xxx-123"
                  },
                  "product_barcode": {
                    "description": "Barcode",
                    "type": "string",
                    "example": 12345678
                  },
                  "product_description": {
                    "description": "Optional description",
                    "type": "string",
                    "example": "lorem ipsum dolor sit amet"
                  },
                  "product_priceIncludesVat": {
                    "description": "Whether price is provided included or excluding VAT",
                    "type": "boolean",
                    "example": false
                  },
                  "product_active": {
                    "description": "Is product active",
                    "type": "boolean",
                    "example": true
                  },
                  "product_discountable": {
                    "description": "Is product discountable",
                    "type": "boolean",
                    "example": true
                  },
                  "product_stock_enabled": {
                    "description": "Is stock for product enabled",
                    "type": "boolean",
                    "example": true
                  },
                  "product_stock_value": {
                    "description": "Product stock value",
                    "type": "string",
                    "example": 10.5
                  },
                  "product_stock_reorderLevel": {
                    "description": "Product stock reorder level",
                    "type": "string",
                    "example": 2.5
                  },
                  "product_stock_safetyStock": {
                    "description": "Product stock safety level",
                    "type": "string",
                    "example": 5.1
                  },
                  "product_stock_unit": {
                    "description": "Product stock unit",
                    "type": "string",
                    "example": "Kg"
                  },
                  "product_sortIndex": {
                    "description": "Product sort index",
                    "type": "integer",
                    "example": 5
                  },
                  "product_type": {
                    "description": "In case of adding new sidedishes or extras you need to provide the product_type. For example, if you're adding 'Fries' as a side you need to provide 'food'.",
                    "type": "string",
                    "example": "food, drink or default"
                  },
                  "productgroup": {
                    "properties": {
                      "productgroup_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "product_base": {
                    "properties": {
                      "product_id": {
                        "description": "You can create a product variation for a certain product by setting the product_base-object with the product_id of the base-product. To UPDATE or DELETE a product variation use the /products endpoint as a product variation is like normal product.",
                        "type": "integer",
                        "example": 1002
                      }
                    },
                    "type": "object"
                  },
                  "product_variations_enabled": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_externalReference": {
                      "type": "string",
                      "example": "ref-1234"
                    },
                    "product_itemnumber": {
                      "type": "string",
                      "example": 1
                    },
                    "product_barcode": {
                      "type": "string",
                      "example": "x400467508233"
                    },
                    "product_name": {
                      "type": "string",
                      "example": "coca cola"
                    },
                    "product_description": {
                      "type": "string",
                      "example": "coca cola - non-alcoholic drink"
                    },
                    "product_price": {
                      "type": "string",
                      "example": 10.5
                    },
                    "product_priceIncludesVat": {
                      "type": "boolean",
                      "example": false
                    },
                    "product_vat": {
                      "type": "string",
                      "example": 2
                    },
                    "product_vat_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "product_customPrice": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_customQuantity": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_fav": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_highlight": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_expressMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_stock_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_ingredients_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_variations_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_stock_value": {
                      "type": "string",
                      "example": 100
                    },
                    "product_stock_unit": {
                      "type": "string",
                      "example": "kg"
                    },
                    "product_stock_reorderLevel": {
                      "type": "string",
                      "example": 10
                    },
                    "product_stock_safetyStock": {
                      "type": "string",
                      "example": 20
                    },
                    "product_sortIndex": {
                      "type": "integer",
                      "example": 5
                    },
                    "product_soldOut": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_sideDishOrder": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_discountable": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_accountingCode": {
                      "type": "string",
                      "example": 1000123
                    },
                    "product_colorClass": {
                      "type": "string",
                      "example": "bgGreenYellow"
                    },
                    "productgroup_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_type_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_type": {
                      "type": "string",
                      "example": "standard"
                    },
                    "product_created_at": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    },
                    "product_updated_at": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    },
                    "product_alternativeNameOnReceipts": {
                      "type": "string",
                      "example": "xxx cola"
                    },
                    "product_alternativeNameInPos": {
                      "type": "string",
                      "example": "yyy cola"
                    },
                    "productgroup": {
                      "properties": {
                        "productgroup_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "productgroup_name": {
                          "type": "string"
                        },
                        "productgroup_description": {
                          "type": "string"
                        },
                        "productgroup_shortcut": {
                          "type": "string"
                        },
                        "productgroup_active": {
                          "type": "boolean",
                          "example": false
                        },
                        "productgroup_sortIndex": {
                          "type": "integer",
                          "example": 9999
                        },
                        "productgroup_created_at": {
                          "type": "string"
                        },
                        "productgroup_updated_at": {
                          "type": "string"
                        },
                        "productgroup_type_id": {
                          "type": "integer",
                          "example": 9999
                        },
                        "productgroup_parent": {
                          "type": "integer",
                          "example": 2
                        },
                        "productgroup_accountingCode": {
                          "type": "string",
                          "example": "1000123"
                        }
                      },
                      "type": "object"
                    },
                    "productvariation": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "variation_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "variation_name": {
                            "type": "string",
                            "example": "schnitzel with chips and mayo"
                          },
                          "variation_price": {
                            "type": "string",
                            "example": 15.2
                          },
                          "variation_stock": {
                            "type": "string",
                            "example": 10
                          }
                        }
                      }
                    },
                    "productingredient": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "ingredient_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "ingredient_name": {
                            "type": "string",
                            "example": "pork meat"
                          },
                          "ingredient_unit": {
                            "type": "string",
                            "example": "Kg"
                          },
                          "ingredient_quantity": {
                            "type": "string",
                            "example": 0
                          }
                        }
                      }
                    },
                    "product_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_base_id": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find Product by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "includeProductGroup",
            "in": "query",
            "description": "include product group information",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProductVariations",
            "in": "query",
            "description": "include product variations information",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProductIngredients",
            "in": "query",
            "description": "include product variations information",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_externalReference": {
                      "type": "string",
                      "example": "ref-1234"
                    },
                    "product_itemnumber": {
                      "type": "string",
                      "example": 1
                    },
                    "product_barcode": {
                      "type": "string",
                      "example": "x400467508233"
                    },
                    "product_name": {
                      "type": "string",
                      "example": "coca cola"
                    },
                    "product_description": {
                      "type": "string",
                      "example": "coca cola - non-alcoholic drink"
                    },
                    "product_price": {
                      "type": "string",
                      "example": 10.5
                    },
                    "product_priceIncludesVat": {
                      "type": "boolean",
                      "example": false
                    },
                    "product_vat": {
                      "type": "string",
                      "example": 2
                    },
                    "product_vat_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "product_customPrice": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_customQuantity": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_fav": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_highlight": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_expressMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_stock_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_ingredients_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_variations_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_stock_value": {
                      "type": "string",
                      "example": 100
                    },
                    "product_stock_unit": {
                      "type": "string",
                      "example": "kg"
                    },
                    "product_stock_reorderLevel": {
                      "type": "string",
                      "example": 10
                    },
                    "product_stock_safetyStock": {
                      "type": "string",
                      "example": 20
                    },
                    "product_sortIndex": {
                      "type": "integer",
                      "example": 5
                    },
                    "product_soldOut": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_sideDishOrder": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_discountable": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_accountingCode": {
                      "type": "string",
                      "example": 1000123
                    },
                    "product_colorClass": {
                      "type": "string",
                      "example": "bgGreenYellow"
                    },
                    "productgroup_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_type_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_type": {
                      "type": "string",
                      "example": "standard"
                    },
                    "product_created_at": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    },
                    "product_updated_at": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    },
                    "product_alternativeNameOnReceipts": {
                      "type": "string",
                      "example": "xxx cola"
                    },
                    "product_alternativeNameInPos": {
                      "type": "string",
                      "example": "yyy cola"
                    },
                    "productgroup": {
                      "properties": {
                        "productgroup_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "productgroup_name": {
                          "type": "string"
                        },
                        "productgroup_description": {
                          "type": "string"
                        },
                        "productgroup_shortcut": {
                          "type": "string"
                        },
                        "productgroup_active": {
                          "type": "boolean",
                          "example": false
                        },
                        "productgroup_sortIndex": {
                          "type": "integer",
                          "example": 9999
                        },
                        "productgroup_created_at": {
                          "type": "string"
                        },
                        "productgroup_updated_at": {
                          "type": "string"
                        },
                        "productgroup_type_id": {
                          "type": "integer",
                          "example": 9999
                        },
                        "productgroup_parent": {
                          "type": "integer",
                          "example": 2
                        },
                        "productgroup_accountingCode": {
                          "type": "string",
                          "example": "1000123"
                        }
                      },
                      "type": "object"
                    },
                    "productvariation": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "variation_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "variation_name": {
                            "type": "string",
                            "example": "schnitzel with chips and mayo"
                          },
                          "variation_price": {
                            "type": "string",
                            "example": 15.2
                          },
                          "variation_stock": {
                            "type": "string",
                            "example": 10
                          }
                        }
                      }
                    },
                    "productingredient": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "ingredient_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "ingredient_name": {
                            "type": "string",
                            "example": "pork meat"
                          },
                          "ingredient_unit": {
                            "type": "string",
                            "example": "Kg"
                          },
                          "ingredient_quantity": {
                            "type": "string",
                            "example": 0
                          }
                        }
                      }
                    },
                    "product_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_base_id": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update Product by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "product_vat": {
                    "description": "VAT-Rate in decimals. Provide either product_vat or product_vat_id",
                    "type": "string",
                    "example": 10.5
                  },
                  "product_vat_id": {
                    "description": "ID of VAT-rate (see /vat-rates). Provide either product_vat or product_vat_id",
                    "type": "integer",
                    "example": 1234
                  },
                  "product_name": {
                    "description": "Product name",
                    "type": "string",
                    "example": "Coca cola"
                  },
                  "product_itemnumber": {
                    "description": "Item number",
                    "type": "string",
                    "example": "x-123"
                  },
                  "product_externalReference": {
                    "description": "External reference",
                    "type": "string",
                    "example": "xxx-123"
                  },
                  "product_barcode": {
                    "description": "Barcode",
                    "type": "string",
                    "example": 12345678
                  },
                  "product_description": {
                    "description": "Optional description",
                    "type": "string",
                    "example": "lorem ipsum dolor sit amet"
                  },
                  "product_price": {
                    "description": "Product price",
                    "type": "string",
                    "example": 124.25
                  },
                  "product_priceIncludesVat": {
                    "description": "Whether price is provided included or excluding VAT",
                    "type": "boolean",
                    "example": false
                  },
                  "product_active": {
                    "description": "Is product active",
                    "type": "boolean",
                    "example": true
                  },
                  "product_discountable": {
                    "description": "Is product discountable",
                    "type": "boolean",
                    "example": true
                  },
                  "product_stock_enabled": {
                    "description": "Is stock for product enabled",
                    "type": "boolean",
                    "example": true
                  },
                  "product_stock_value": {
                    "description": "Product stock value",
                    "type": "string",
                    "example": 10.5
                  },
                  "product_stock_reorderLevel": {
                    "description": "Product stock reorder level",
                    "type": "string",
                    "example": 2.5
                  },
                  "product_stock_safetyStock": {
                    "description": "Product stock safety level",
                    "type": "string",
                    "example": 5.1
                  },
                  "product_stock_unit": {
                    "description": "Product stock unit",
                    "type": "string",
                    "example": "Kg"
                  },
                  "product_sortIndex": {
                    "description": "Product sort index",
                    "type": "integer",
                    "example": 5
                  },
                  "productgroup_id": {
                    "description": "Product group id",
                    "type": "integer",
                    "example": 1
                  },
                  "product_type": {
                    "description": "In case of adding new sidedishes or extras you need to provide the product_type. For example, if you're adding 'Fries' as a side you need to provide 'food'.",
                    "type": "string",
                    "example": "food, drink or default"
                  },
                  "product_base": {
                    "properties": {
                      "product_id": {
                        "description": "You can create a product variation for a certain product by setting the product_base-object with the product_id of the base-product. To UPDATE or DELETE a product variation use the /products endpoint as a product variation is like normal product.",
                        "type": "integer",
                        "example": 1002
                      }
                    },
                    "type": "object"
                  },
                  "productgroup": {
                    "properties": {
                      "productgroup_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "product_variations_enabled": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_externalReference": {
                      "type": "string",
                      "example": "ref-1234"
                    },
                    "product_itemnumber": {
                      "type": "string",
                      "example": 1
                    },
                    "product_barcode": {
                      "type": "string",
                      "example": "x400467508233"
                    },
                    "product_name": {
                      "type": "string",
                      "example": "coca cola"
                    },
                    "product_description": {
                      "type": "string",
                      "example": "coca cola - non-alcoholic drink"
                    },
                    "product_price": {
                      "type": "string",
                      "example": 10.5
                    },
                    "product_priceIncludesVat": {
                      "type": "boolean",
                      "example": false
                    },
                    "product_vat": {
                      "type": "string",
                      "example": 2
                    },
                    "product_vat_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "product_customPrice": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_customQuantity": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_fav": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_highlight": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_expressMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_stock_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_ingredients_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_variations_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_stock_value": {
                      "type": "string",
                      "example": 100
                    },
                    "product_stock_unit": {
                      "type": "string",
                      "example": "kg"
                    },
                    "product_stock_reorderLevel": {
                      "type": "string",
                      "example": 10
                    },
                    "product_stock_safetyStock": {
                      "type": "string",
                      "example": 20
                    },
                    "product_sortIndex": {
                      "type": "integer",
                      "example": 5
                    },
                    "product_soldOut": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_sideDishOrder": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_discountable": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_accountingCode": {
                      "type": "string",
                      "example": 1000123
                    },
                    "product_colorClass": {
                      "type": "string",
                      "example": "bgGreenYellow"
                    },
                    "productgroup_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_type_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "product_type": {
                      "type": "string",
                      "example": "standard"
                    },
                    "product_created_at": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    },
                    "product_updated_at": {
                      "type": "string",
                      "example": "2019-01-01 11:11:11"
                    },
                    "product_alternativeNameOnReceipts": {
                      "type": "string",
                      "example": "xxx cola"
                    },
                    "product_alternativeNameInPos": {
                      "type": "string",
                      "example": "yyy cola"
                    },
                    "productgroup": {
                      "properties": {
                        "productgroup_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "productgroup_name": {
                          "type": "string"
                        },
                        "productgroup_description": {
                          "type": "string"
                        },
                        "productgroup_shortcut": {
                          "type": "string"
                        },
                        "productgroup_active": {
                          "type": "boolean",
                          "example": false
                        },
                        "productgroup_sortIndex": {
                          "type": "integer",
                          "example": 9999
                        },
                        "productgroup_created_at": {
                          "type": "string"
                        },
                        "productgroup_updated_at": {
                          "type": "string"
                        },
                        "productgroup_type_id": {
                          "type": "integer",
                          "example": 9999
                        },
                        "productgroup_parent": {
                          "type": "integer",
                          "example": 2
                        },
                        "productgroup_accountingCode": {
                          "type": "string",
                          "example": "1000123"
                        }
                      },
                      "type": "object"
                    },
                    "productvariation": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "variation_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "variation_name": {
                            "type": "string",
                            "example": "schnitzel with chips and mayo"
                          },
                          "variation_price": {
                            "type": "string",
                            "example": 15.2
                          },
                          "variation_stock": {
                            "type": "string",
                            "example": 10
                          }
                        }
                      }
                    },
                    "productingredient": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "ingredient_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "ingredient_name": {
                            "type": "string",
                            "example": "pork meat"
                          },
                          "ingredient_unit": {
                            "type": "string",
                            "example": "Kg"
                          },
                          "ingredient_quantity": {
                            "type": "string",
                            "example": 0
                          }
                        }
                      }
                    },
                    "product_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "product_base_id": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Product by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Product was deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/batch/stock": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Update Stock In Batch",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "products": {
                    "description": "List of products",
                    "type": "array",
                    "items": {
                      "properties": {
                        "product_stock": {
                          "type": "string"
                        },
                        "product_id": {
                          "type": "string"
                        }
                      }
                    },
                    "example": "List of products"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "updatedIds": {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "type": "object"
                    },
                    "updatedItemNumbers": {
                      "properties": {
                        "number": {
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}/stock": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Stock",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_stock": {
                      "type": "string",
                      "example": 10
                    },
                    "product_reorderLevel": {
                      "type": "string",
                      "example": 5.2
                    },
                    "product_safetyStock": {
                      "type": "string",
                      "example": 2.1
                    },
                    "product_unit": {
                      "type": "string",
                      "example": "piece"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update Stock",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "product_stock": {
                    "type": "string"
                  },
                  "product_reorderLevel": {
                    "type": "string"
                  },
                  "product_safetyStock": {
                    "type": "string"
                  },
                  "product_stockDelta": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_stock": {
                      "type": "string",
                      "example": 10
                    },
                    "product_reorderLevel": {
                      "type": "string",
                      "example": 5.2
                    },
                    "product_safetyStock": {
                      "type": "string",
                      "example": 2.1
                    },
                    "product_unit": {
                      "type": "string",
                      "example": "piece"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/itemNumber/{itemNumber}/stock": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Stock By Item Number",
        "description": "",
        "parameters": [
          {
            "name": "itemNumber",
            "in": "path",
            "description": "Product item number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "product_stock": {
                      "type": "string",
                      "example": 10
                    },
                    "product_reorderLevel": {
                      "type": "string",
                      "example": 5.2
                    },
                    "product_safetyStock": {
                      "type": "string",
                      "example": 2.1
                    },
                    "product_unit": {
                      "type": "string",
                      "example": "piece"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}/price/customerCategory": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Customer Category Product Prices",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "price_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "price_value": {
                        "type": "string",
                        "example": 12.45
                      },
                      "price_valueGross": {
                        "type": "string",
                        "example": 13.56
                      },
                      "price_valueNet": {
                        "type": "string",
                        "example": 12.45
                      },
                      "price_timestamp": {
                        "type": "string",
                        "example": 1234
                      },
                      "product_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "customerCategory_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add Customer Category Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "price_value": {
                    "type": "string"
                  },
                  "customerCategory_id": {
                    "type": "integer",
                    "example": 9999
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "price_value": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_valueGross": {
                      "type": "string",
                      "example": 13.56
                    },
                    "price_valueNet": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_timestamp": {
                      "type": "string",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}/price/customerCategory/{customerCategoryId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Customer Category Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerCategoryId",
            "in": "path",
            "description": "Customer category ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "price_value": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_valueGross": {
                      "type": "string",
                      "example": 13.56
                    },
                    "price_valueNet": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_timestamp": {
                      "type": "string",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update Customer Category Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerCategoryId",
            "in": "path",
            "description": "customer category id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload9"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "price_value": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_valueGross": {
                      "type": "string",
                      "example": 13.56
                    },
                    "price_valueNet": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_timestamp": {
                      "type": "string",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customerCategory_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Customer Category Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerCategoryId",
            "in": "path",
            "description": "Customer category ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Product price was deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}/price/customer": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Customer Product Prices",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "price_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "price_value": {
                        "type": "string",
                        "example": 12.45
                      },
                      "price_valueGross": {
                        "type": "string",
                        "example": 13.56
                      },
                      "price_valueNet": {
                        "type": "string",
                        "example": 12.45
                      },
                      "price_timestamp": {
                        "type": "string",
                        "example": 1234
                      },
                      "product_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "customer_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add Customer Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "price_value": {
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "integer",
                    "example": 9999
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "price_value": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_valueGross": {
                      "type": "string",
                      "example": 13.56
                    },
                    "price_valueNet": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_timestamp": {
                      "type": "string",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}/price/customer/{customerId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Customer Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer category ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "price_value": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_valueGross": {
                      "type": "string",
                      "example": 13.56
                    },
                    "price_valueNet": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_timestamp": {
                      "type": "string",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update Customer Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customer id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload9"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "price_value": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_valueGross": {
                      "type": "string",
                      "example": 13.56
                    },
                    "price_valueNet": {
                      "type": "string",
                      "example": 12.45
                    },
                    "price_timestamp": {
                      "type": "string",
                      "example": 1234
                    },
                    "product_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "customer_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Customer Product Price",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer category ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Product price was deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/storno": {
      "get": {
        "tags": [
          "Storno"
        ],
        "summary": "List all Stornos",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "storno_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "storno_name": {
                        "type": "string",
                        "example": "cancellation"
                      },
                      "storno_description": {
                        "type": "string",
                        "example": "storno reason 1234"
                      },
                      "storno_created_at": {
                        "type": "string",
                        "example": "2019-01-01 12:00:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Storno"
        ],
        "summary": "Create a new Storno",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "storno_name": {
                    "description": "Storno name",
                    "type": "string",
                    "example": "cancellation"
                  },
                  "storno_description": {
                    "description": "Storno description",
                    "type": "string",
                    "example": "storno reason 1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "storno_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "storno_name": {
                      "type": "string",
                      "example": "cancellation"
                    },
                    "storno_description": {
                      "type": "string",
                      "example": "storno reason 1234"
                    },
                    "storno_created_at": {
                      "type": "string",
                      "example": "2019-01-01 12:00:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/storno/{id}": {
      "get": {
        "tags": [
          "Storno"
        ],
        "summary": "Find Storno by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "storno_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "storno_name": {
                      "type": "string",
                      "example": "cancellation"
                    },
                    "storno_description": {
                      "type": "string",
                      "example": "storno reason 1234"
                    },
                    "storno_created_at": {
                      "type": "string",
                      "example": "2019-01-01 12:00:00"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Storno"
        ],
        "summary": "Update Storno by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "storno id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "storno_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "storno_name": {
                      "type": "string",
                      "example": "cancellation"
                    },
                    "storno_description": {
                      "type": "string",
                      "example": "storno reason 1234"
                    },
                    "storno_created_at": {
                      "type": "string",
                      "example": "2019-01-01 12:00:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Storno"
        ],
        "summary": "Delete Storno by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Storno was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tableAreas": {
      "get": {
        "tags": [
          "TableArea"
        ],
        "summary": "List all Table Areas",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "tableArea_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "tableArea_name": {
                        "type": "string",
                        "example": "innen 1"
                      },
                      "tableArea_shortName": {
                        "type": "string",
                        "example": "IN-1"
                      },
                      "tableArea_order": {
                        "type": "integer",
                        "example": 1
                      },
                      "tableArea_allowTemporaryTables": {
                        "type": "boolean",
                        "example": true
                      },
                      "tableArea_active": {
                        "type": "boolean",
                        "example": true
                      },
                      "tableArea_intelligentFavourites": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "TableArea"
        ],
        "summary": "Create a new Table Area",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload10"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "tableArea_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "tableArea_name": {
                      "type": "string",
                      "example": "innen 1"
                    },
                    "tableArea_shortName": {
                      "type": "string",
                      "example": "IN-1"
                    },
                    "tableArea_order": {
                      "type": "integer",
                      "example": 1
                    },
                    "tableArea_allowTemporaryTables": {
                      "type": "boolean",
                      "example": true
                    },
                    "tableArea_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "tableArea_intelligentFavourites": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tableAreas/{id}": {
      "get": {
        "tags": [
          "TableArea"
        ],
        "summary": "Find Table Area by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "tableArea_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "tableArea_name": {
                      "type": "string",
                      "example": "innen 1"
                    },
                    "tableArea_shortName": {
                      "type": "string",
                      "example": "IN-1"
                    },
                    "tableArea_order": {
                      "type": "integer",
                      "example": 1
                    },
                    "tableArea_allowTemporaryTables": {
                      "type": "boolean",
                      "example": true
                    },
                    "tableArea_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "tableArea_intelligentFavourites": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "TableArea"
        ],
        "summary": "Update Table Area by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload10"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "tableArea_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "tableArea_name": {
                      "type": "string",
                      "example": "innen 1"
                    },
                    "tableArea_shortName": {
                      "type": "string",
                      "example": "IN-1"
                    },
                    "tableArea_order": {
                      "type": "integer",
                      "example": 1
                    },
                    "tableArea_allowTemporaryTables": {
                      "type": "boolean",
                      "example": true
                    },
                    "tableArea_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "tableArea_intelligentFavourites": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TableArea"
        ],
        "summary": "Delete Table Area by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "TableArea was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tables": {
      "get": {
        "tags": [
          "Table"
        ],
        "summary": "List all Tables",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "table_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "table_name": {
                        "type": "string",
                        "example": 1234
                      },
                      "table_description": {
                        "type": "string",
                        "example": 1234
                      },
                      "table_isTemporay": {
                        "type": "boolean",
                        "example": true
                      },
                      "table_order": {
                        "type": "integer",
                        "example": 1
                      },
                      "table_checkoutMode": {
                        "type": "boolean",
                        "example": false
                      },
                      "tableArea_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "table_created_at": {
                        "type": "string",
                        "example": "2019-01-01 12:12:12"
                      },
                      "table_updated_at": {
                        "type": "string",
                        "example": "2019-01-01 12:12:12"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Table"
        ],
        "summary": "Create a new Table",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "table_name": {
                    "type": "string",
                    "example": 1234
                  },
                  "table_isTemporay": {
                    "type": "boolean",
                    "example": true
                  },
                  "table_checkoutMode": {
                    "type": "boolean",
                    "example": false
                  },
                  "table_order": {
                    "type": "integer",
                    "example": 1
                  },
                  "table_description": {
                    "type": "string",
                    "example": 1234
                  },
                  "tableArea_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "table_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "table_name": {
                      "type": "string",
                      "example": 1234
                    },
                    "table_description": {
                      "type": "string",
                      "example": 1234
                    },
                    "table_isTemporay": {
                      "type": "boolean",
                      "example": true
                    },
                    "table_order": {
                      "type": "integer",
                      "example": 1
                    },
                    "table_checkoutMode": {
                      "type": "boolean",
                      "example": false
                    },
                    "tableArea_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "table_created_at": {
                      "type": "string",
                      "example": "2019-01-01 12:12:12"
                    },
                    "table_updated_at": {
                      "type": "string",
                      "example": "2019-01-01 12:12:12"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tables/{id}": {
      "get": {
        "tags": [
          "Table"
        ],
        "summary": "Find Table by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "table_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "table_name": {
                      "type": "string",
                      "example": 1234
                    },
                    "table_description": {
                      "type": "string",
                      "example": 1234
                    },
                    "table_isTemporay": {
                      "type": "boolean",
                      "example": true
                    },
                    "table_order": {
                      "type": "integer",
                      "example": 1
                    },
                    "table_checkoutMode": {
                      "type": "boolean",
                      "example": false
                    },
                    "tableArea_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "table_created_at": {
                      "type": "string",
                      "example": "2019-01-01 12:12:12"
                    },
                    "table_updated_at": {
                      "type": "string",
                      "example": "2019-01-01 12:12:12"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Table"
        ],
        "summary": "Update Table by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "table_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "table_name": {
                      "type": "string",
                      "example": 1234
                    },
                    "table_description": {
                      "type": "string",
                      "example": 1234
                    },
                    "table_isTemporay": {
                      "type": "boolean",
                      "example": true
                    },
                    "table_order": {
                      "type": "integer",
                      "example": 1
                    },
                    "table_checkoutMode": {
                      "type": "boolean",
                      "example": false
                    },
                    "tableArea_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "table_created_at": {
                      "type": "string",
                      "example": "2019-01-01 12:12:12"
                    },
                    "table_updated_at": {
                      "type": "string",
                      "example": "2019-01-01 12:12:12"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Table"
        ],
        "summary": "Delete Table by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "Table was deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List all Users",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "user_firstName": {
                        "type": "string",
                        "example": "Christoph"
                      },
                      "user_lastName": {
                        "type": "string",
                        "example": "MÃ¼ller"
                      },
                      "user_username": {
                        "type": "string",
                        "example": "christoph@some-email.com"
                      },
                      "user_printAccess": {
                        "type": "integer",
                        "example": 1234
                      },
                      "user_printer": {
                        "type": "integer",
                        "example": 15
                      },
                      "user_lastActionAt": {
                        "type": "string",
                        "example": "2018-11-05 01:23:45"
                      },
                      "user_lastLoginAt": {
                        "type": "string",
                        "example": "2018-11-05 01:23:45"
                      },
                      "user_trainingsMode": {
                        "type": "boolean",
                        "example": true
                      },
                      "right_id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "loginLog": {
                        "properties": {
                          "loginLog_lastActionAt": {
                            "type": "string",
                            "example": "2018-11-05 01:23:45"
                          },
                          "loginLog_userAgent": {
                            "type": "string",
                            "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)"
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new User",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload11"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_firstName": {
                      "type": "string",
                      "example": "Christoph"
                    },
                    "user_lastName": {
                      "type": "string",
                      "example": "MÃ¼ller"
                    },
                    "user_username": {
                      "type": "string",
                      "example": "christoph@some-email.com"
                    },
                    "user_printAccess": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_printer": {
                      "type": "integer",
                      "example": 15
                    },
                    "user_lastActionAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_lastLoginAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_trainingsMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "right_id": {
                      "type": "integer",
                      "example": 1234
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find User by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID to find",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_firstName": {
                      "type": "string",
                      "example": "Christoph"
                    },
                    "user_lastName": {
                      "type": "string",
                      "example": "MÃ¼ller"
                    },
                    "user_username": {
                      "type": "string",
                      "example": "christoph@some-email.com"
                    },
                    "user_printAccess": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_printer": {
                      "type": "integer",
                      "example": 15
                    },
                    "user_lastActionAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_lastLoginAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_trainingsMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "right_id": {
                      "type": "integer",
                      "example": 1234
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload11"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_firstName": {
                      "type": "string",
                      "example": "Christoph"
                    },
                    "user_lastName": {
                      "type": "string",
                      "example": "MÃ¼ller"
                    },
                    "user_username": {
                      "type": "string",
                      "example": "christoph@some-email.com"
                    },
                    "user_printAccess": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_printer": {
                      "type": "integer",
                      "example": 15
                    },
                    "user_lastActionAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_lastLoginAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_trainingsMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "right_id": {
                      "type": "integer",
                      "example": 1234
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete User by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "User was successfully deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update Password By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID to update password",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user_password": {
                    "type": "string",
                    "example": "StrongPassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_firstName": {
                      "type": "string",
                      "example": "Christoph"
                    },
                    "user_lastName": {
                      "type": "string",
                      "example": "MÃ¼ller"
                    },
                    "user_username": {
                      "type": "string",
                      "example": "christoph@some-email.com"
                    },
                    "user_printAccess": {
                      "type": "integer",
                      "example": 1234
                    },
                    "user_printer": {
                      "type": "integer",
                      "example": 15
                    },
                    "user_lastActionAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_lastLoginAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "user_trainingsMode": {
                      "type": "boolean",
                      "example": true
                    },
                    "right_id": {
                      "type": "integer",
                      "example": 1234
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}/signInToken": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Sign In Token",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID to generate token",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expiresIn",
            "in": "query",
            "description": "Life-time of token (seconds)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "crmUserId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "token": {
                      "type": "string",
                      "example": "AAA.BBBBBBBBBBBB.CCC"
                    },
                    "issuedAt": {
                      "type": "string",
                      "example": "2018-11-05 01:23:45"
                    },
                    "expiresAt": {
                      "type": "string",
                      "example": "2018-11-05 01:24:45"
                    },
                    "loginURI": {
                      "type": "string",
                      "example": "https://ur.ready2order.com/sys/login.php?token=AAA.BBBBBBBBBBBB.CCC"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/rights": {
      "get": {
        "tags": [
          "UserRoles"
        ],
        "summary": "List all User Roles",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page you want to display",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "userRight_name": {
                      "type": "string"
                    },
                    "userRight_description": {
                      "type": "string"
                    },
                    "userRight_allowGastroTransferOrders": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowGastroCancellation": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowGastroCancellationWithoutReceiptPrinting": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowCancellationInvoice": {
                      "type": "integer",
                      "example": 9999
                    },
                    "userRight_allowOrderRetourMode": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowGastroOrder": {
                      "type": "string"
                    },
                    "userRight_allowGastroPayment": {
                      "type": "string"
                    },
                    "userRight_showOwnOrdersOnly": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowOpenDay": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowCloseDay": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowSalesReport": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowSalesReportOwnOnly": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowSalesDailyReports": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowProductPage": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowOrderStop": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowProductSoldOut": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowProductFavorite": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowProductAddSideDish": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_showProductStock": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowPrintProductStock": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowInvoicePage": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_invoicePageShowOwnInvoicesOnly": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowCashBook": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowCashBookInsert": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowCashBookPdfExport": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_showCashBookBalance": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowBackendLogin": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowPrinterPage": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowPrinterDiscovery": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowLogoutAllUsers": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowOpenShiftAgain": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowProductDiscount": {
                      "type": "boolean",
                      "example": false
                    },
                    "userRight_allowSelectedProductPriceChange": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/vat-rates": {
      "get": {
        "tags": [
          "VatRate"
        ],
        "summary": "List all Vat Rates",
        "description": "This endpoint returns a list of all available VatRates for this account",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1234
                      },
                      "value": {
                        "type": "string",
                        "example": 20
                      },
                      "code": {
                        "type": "string",
                        "example": 1
                      },
                      "description": {
                        "type": "string",
                        "example": "Allgemeiner Steuersatz"
                      },
                      "countryId": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/webhook": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Find",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "webhookUrl": {
                      "type": "string",
                      "example": "https://ready2order.com"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "Update Webhook Url",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "webhookUrl": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "webhookUrl": {
                      "type": "string",
                      "example": "https://ready2order.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/webhook/events": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Find Webhook Events",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "activeEvents": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "availableEvents": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "Update Webhook Event",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "addEvent": {
                    "type": "string"
                  },
                  "removeEvent": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Your now receiving webhooks for the event <name>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "AccountingFinancialYear"
    },
    {
      "name": "Bill"
    },
    {
      "name": "BillType"
    },
    {
      "name": "Country"
    },
    {
      "name": "Coupon"
    },
    {
      "name": "CouponCategory"
    },
    {
      "name": "Currency"
    },
    {
      "name": "Customer"
    },
    {
      "name": "CustomerGroup"
    },
    {
      "name": "Discount"
    },
    {
      "name": "DiscountGroup"
    },
    {
      "name": "Export"
    },
    {
      "name": "Grant Access Token"
    },
    {
      "name": "JobStatus"
    },
    {
      "name": "Language"
    },
    {
      "name": "LegalForm"
    },
    {
      "name": "Order"
    },
    {
      "name": "PaymentMethod"
    },
    {
      "name": "PaymentMethodType"
    },
    {
      "name": "PrintJob"
    },
    {
      "name": "Printer"
    },
    {
      "name": "Product"
    },
    {
      "name": "ProductGroup"
    },
    {
      "name": "Storno"
    },
    {
      "name": "Table"
    },
    {
      "name": "TableArea"
    },
    {
      "name": "User"
    },
    {
      "name": "UserRoles"
    },
    {
      "name": "Webhook"
    }
  ],
  "components": {
    "requestBodies": {
      "Payload": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "coupon_name": {
                  "type": "string",
                  "example": "MyCoupon"
                },
                "coupon_value": {
                  "type": "string",
                  "example": 5
                },
                "couponCategory_id": {
                  "type": "string",
                  "example": 123
                },
                "coupon_containsVat": {
                  "type": "string",
                  "example": 3
                },
                "customer_id": {
                  "type": "integer",
                  "example": 450
                },
                "coupon_type": {
                  "type": "string",
                  "enum": [
                    "coupon"
                  ],
                  "example": "coupon"
                },
                "coupon_purpose": {
                  "type": "string",
                  "enum": [
                    "single",
                    "multi"
                  ],
                  "example": "single|multi"
                },
                "coupon_validUntil": {
                  "type": "string",
                  "example": "2030-01-02"
                },
                "coupon_issuedAt": {
                  "type": "string",
                  "example": "2025-01-02"
                },
                "coupon_testMode": {
                  "type": "boolean",
                  "example": false
                },
                "coupon_identifier": {
                  "type": "string",
                  "example": "AABBCC"
                }
              }
            }
          }
        }
      },
      "Payload2": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "customerCategory_name": {
                  "type": "string"
                },
                "customerCategory_description": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Payload3": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "couponCategory_name": {
                  "type": "string"
                },
                "couponCategory_description": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Payload4": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "customerCategory_id": {
                  "type": "integer",
                  "example": 1126
                },
                "birthday": {
                  "type": "string",
                  "example": "1991-09-20"
                },
                "city": {
                  "type": "string",
                  "example": "Wien"
                },
                "company": {
                  "type": "string",
                  "example": "Maxi Gmbh"
                },
                "email": {
                  "type": "string",
                  "example": "example@ready2order.com"
                },
                "firstName": {
                  "type": "string",
                  "example": "Max"
                },
                "lastName": {
                  "type": "string",
                  "example": "Muster"
                },
                "customer_name": {
                  "type": "string",
                  "example": "no-example"
                },
                "notes": {
                  "type": "string",
                  "example": "Some custom notes"
                },
                "customer_number": {
                  "type": "integer",
                  "example": 0
                },
                "phone": {
                  "type": "string",
                  "example": "+43 12345678"
                },
                "salutation": {
                  "type": "string",
                  "example": "Herr"
                },
                "street": {
                  "type": "string",
                  "example": "StraÃŸe 1"
                },
                "title": {
                  "type": "string",
                  "example": "Herr"
                },
                "uid": {
                  "type": "string",
                  "example": "ATU1234567"
                },
                "zip": {
                  "type": "string",
                  "example": 1030
                },
                "fk_cou_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "Payload5": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "discountGroup_description": {
                  "description": "The description of the discount group",
                  "type": "string",
                  "example": "description example"
                },
                "discountGroup_active": {
                  "description": "Whether the discount group is active or not",
                  "type": "boolean",
                  "example": true
                },
                "discountGroup_name": {
                  "description": "The name of the discount group",
                  "type": "string",
                  "example": "Sales"
                }
              }
            }
          }
        }
      },
      "Payload6": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "discount_name": {
                  "description": "The name of the discount",
                  "type": "string",
                  "example": "Discount"
                },
                "discountGroup_id": {
                  "description": "The id of the discount group",
                  "type": "integer",
                  "example": 116
                },
                "discount_unit": {
                  "description": "The unit of the discount",
                  "type": "string",
                  "enum": [
                    "percent",
                    "currency",
                    "custom"
                  ],
                  "example": "custom"
                },
                "discount_order": {
                  "description": "The order of the discount",
                  "type": "integer",
                  "example": 0
                },
                "discount_description": {
                  "description": "The description of the discount",
                  "type": "string",
                  "example": "A discount description"
                },
                "discount_active": {
                  "description": "Whether the discount is active or not",
                  "type": "boolean",
                  "example": true
                },
                "discount_value": {
                  "description": "The value of the discount",
                  "type": "string",
                  "example": 30
                }
              }
            }
          }
        }
      },
      "Payload7": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "payment_description": {
                  "description": "The description of the payment method",
                  "type": "string",
                  "example": "Paying in cash"
                },
                "payment_markAsPaid": {
                  "description": "Mark payment method as paid",
                  "type": "boolean",
                  "example": true
                },
                "paymentType_id": {
                  "description": "The payment type id of the payment method",
                  "type": "integer",
                  "example": 1
                },
                "payment_name": {
                  "description": "The name of the payment method",
                  "type": "string",
                  "example": "Barzahlung"
                }
              }
            }
          }
        }
      },
      "Payload8": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "productgroup_name": {
                  "type": "string"
                },
                "productgroup_description": {
                  "type": "string"
                },
                "productgroup_shortcut": {
                  "type": "string"
                },
                "productgroup_active": {
                  "type": "boolean",
                  "example": false
                },
                "productgroup_parent": {
                  "type": "integer",
                  "example": 9999
                },
                "productgroup_sortIndex": {
                  "type": "integer",
                  "example": 9999
                },
                "productgroup_accountingCode": {
                  "type": "string"
                },
                "productgroup_accountingCodeName": {
                  "type": "string"
                },
                "productgroup_accountingCodeVatRate": {
                  "type": "string"
                },
                "productgroup_type_id": {
                  "type": "integer",
                  "example": 9999
                }
              }
            }
          }
        }
      },
      "Payload9": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "price_value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Payload10": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "tableArea_name": {
                  "description": "Table name",
                  "type": "string",
                  "example": "innen 1"
                },
                "tableArea_shortName": {
                  "description": "Table area short name",
                  "type": "string",
                  "example": "IN-1"
                },
                "tableArea_order": {
                  "description": "Table area order number (sorting)",
                  "type": "string",
                  "example": 1
                },
                "tableArea_allowTemporaryTables": {
                  "description": "Allow temporary tables",
                  "type": "boolean",
                  "example": true
                },
                "tableArea_active": {
                  "description": "Table is active",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "Payload11": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "user_username": {
                  "type": "string",
                  "example": "christoph@email.com"
                },
                "user_password": {
                  "type": "string",
                  "example": "StrongPassword123!"
                },
                "user_firstName": {
                  "type": "string",
                  "example": "Christoph"
                },
                "user_lastName": {
                  "type": "string",
                  "example": "MÃ¼ller"
                },
                "user_trainingsMode": {
                  "type": "boolean",
                  "example": true
                },
                "user_printer": {
                  "type": "integer",
                  "example": 123
                },
                "user_printAccess": {
                  "type": "integer",
                  "example": 2457
                },
                "right_id": {
                  "type": "integer",
                  "example": 1234
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Token provided by ready2order",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}